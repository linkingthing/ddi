// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dhcp.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DHCPStartReq struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	ConfigFile           string   `protobuf:"bytes,2,opt,name=configFile,proto3" json:"configFile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHCPStartReq) Reset()         { *m = DHCPStartReq{} }
func (m *DHCPStartReq) String() string { return proto.CompactTextString(m) }
func (*DHCPStartReq) ProtoMessage()    {}
func (*DHCPStartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{0}
}

func (m *DHCPStartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHCPStartReq.Unmarshal(m, b)
}
func (m *DHCPStartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHCPStartReq.Marshal(b, m, deterministic)
}
func (m *DHCPStartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHCPStartReq.Merge(m, src)
}
func (m *DHCPStartReq) XXX_Size() int {
	return xxx_messageInfo_DHCPStartReq.Size(m)
}
func (m *DHCPStartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DHCPStartReq.DiscardUnknown(m)
}

var xxx_messageInfo_DHCPStartReq proto.InternalMessageInfo

func (m *DHCPStartReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *DHCPStartReq) GetConfigFile() string {
	if m != nil {
		return m.ConfigFile
	}
	return ""
}

type DHCPStopReq struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHCPStopReq) Reset()         { *m = DHCPStopReq{} }
func (m *DHCPStopReq) String() string { return proto.CompactTextString(m) }
func (*DHCPStopReq) ProtoMessage()    {}
func (*DHCPStopReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{1}
}

func (m *DHCPStopReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHCPStopReq.Unmarshal(m, b)
}
func (m *DHCPStopReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHCPStopReq.Marshal(b, m, deterministic)
}
func (m *DHCPStopReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHCPStopReq.Merge(m, src)
}
func (m *DHCPStopReq) XXX_Size() int {
	return xxx_messageInfo_DHCPStopReq.Size(m)
}
func (m *DHCPStopReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DHCPStopReq.DiscardUnknown(m)
}

var xxx_messageInfo_DHCPStopReq proto.InternalMessageInfo

func (m *DHCPStopReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type SubnetOptionData struct {
	AlwaysSend           bool     `protobuf:"varint,1,opt,name=AlwaysSend,proto3" json:"AlwaysSend,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
	CsvFormat            bool     `protobuf:"varint,3,opt,name=CsvFormat,proto3" json:"CsvFormat,omitempty"`
	Data                 string   `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	Space                string   `protobuf:"bytes,6,opt,name=Space,proto3" json:"Space,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubnetOptionData) Reset()         { *m = SubnetOptionData{} }
func (m *SubnetOptionData) String() string { return proto.CompactTextString(m) }
func (*SubnetOptionData) ProtoMessage()    {}
func (*SubnetOptionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{2}
}

func (m *SubnetOptionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubnetOptionData.Unmarshal(m, b)
}
func (m *SubnetOptionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubnetOptionData.Marshal(b, m, deterministic)
}
func (m *SubnetOptionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubnetOptionData.Merge(m, src)
}
func (m *SubnetOptionData) XXX_Size() int {
	return xxx_messageInfo_SubnetOptionData.Size(m)
}
func (m *SubnetOptionData) XXX_DiscardUnknown() {
	xxx_messageInfo_SubnetOptionData.DiscardUnknown(m)
}

var xxx_messageInfo_SubnetOptionData proto.InternalMessageInfo

func (m *SubnetOptionData) GetAlwaysSend() bool {
	if m != nil {
		return m.AlwaysSend
	}
	return false
}

func (m *SubnetOptionData) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SubnetOptionData) GetCsvFormat() bool {
	if m != nil {
		return m.CsvFormat
	}
	return false
}

func (m *SubnetOptionData) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *SubnetOptionData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SubnetOptionData) GetSpace() string {
	if m != nil {
		return m.Space
	}
	return ""
}

type SubnetPools struct {
	OptionData           []*SubnetOptionData `protobuf:"bytes,1,rep,name=OptionData,proto3" json:"OptionData,omitempty"`
	Pool                 string              `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SubnetPools) Reset()         { *m = SubnetPools{} }
func (m *SubnetPools) String() string { return proto.CompactTextString(m) }
func (*SubnetPools) ProtoMessage()    {}
func (*SubnetPools) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{3}
}

func (m *SubnetPools) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubnetPools.Unmarshal(m, b)
}
func (m *SubnetPools) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubnetPools.Marshal(b, m, deterministic)
}
func (m *SubnetPools) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubnetPools.Merge(m, src)
}
func (m *SubnetPools) XXX_Size() int {
	return xxx_messageInfo_SubnetPools.Size(m)
}
func (m *SubnetPools) XXX_DiscardUnknown() {
	xxx_messageInfo_SubnetPools.DiscardUnknown(m)
}

var xxx_messageInfo_SubnetPools proto.InternalMessageInfo

func (m *SubnetPools) GetOptionData() []*SubnetOptionData {
	if m != nil {
		return m.OptionData
	}
	return nil
}

func (m *SubnetPools) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

type CreateSubnetReq struct {
	Service              string         `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	SubnetName           string         `protobuf:"bytes,2,opt,name=subnetName,proto3" json:"subnetName,omitempty"`
	Pools                []*SubnetPools `protobuf:"bytes,3,rep,name=pools,proto3" json:"pools,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateSubnetReq) Reset()         { *m = CreateSubnetReq{} }
func (m *CreateSubnetReq) String() string { return proto.CompactTextString(m) }
func (*CreateSubnetReq) ProtoMessage()    {}
func (*CreateSubnetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{4}
}

func (m *CreateSubnetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubnetReq.Unmarshal(m, b)
}
func (m *CreateSubnetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubnetReq.Marshal(b, m, deterministic)
}
func (m *CreateSubnetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubnetReq.Merge(m, src)
}
func (m *CreateSubnetReq) XXX_Size() int {
	return xxx_messageInfo_CreateSubnetReq.Size(m)
}
func (m *CreateSubnetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubnetReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubnetReq proto.InternalMessageInfo

func (m *CreateSubnetReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *CreateSubnetReq) GetSubnetName() string {
	if m != nil {
		return m.SubnetName
	}
	return ""
}

func (m *CreateSubnetReq) GetPools() []*SubnetPools {
	if m != nil {
		return m.Pools
	}
	return nil
}

type UpdateSubnetReq struct {
	Service              string         `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	SubnetName           string         `protobuf:"bytes,2,opt,name=subnetName,proto3" json:"subnetName,omitempty"`
	Pools                []*SubnetPools `protobuf:"bytes,3,rep,name=pools,proto3" json:"pools,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateSubnetReq) Reset()         { *m = UpdateSubnetReq{} }
func (m *UpdateSubnetReq) String() string { return proto.CompactTextString(m) }
func (*UpdateSubnetReq) ProtoMessage()    {}
func (*UpdateSubnetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{5}
}

func (m *UpdateSubnetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubnetReq.Unmarshal(m, b)
}
func (m *UpdateSubnetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubnetReq.Marshal(b, m, deterministic)
}
func (m *UpdateSubnetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubnetReq.Merge(m, src)
}
func (m *UpdateSubnetReq) XXX_Size() int {
	return xxx_messageInfo_UpdateSubnetReq.Size(m)
}
func (m *UpdateSubnetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubnetReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubnetReq proto.InternalMessageInfo

func (m *UpdateSubnetReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *UpdateSubnetReq) GetSubnetName() string {
	if m != nil {
		return m.SubnetName
	}
	return ""
}

func (m *UpdateSubnetReq) GetPools() []*SubnetPools {
	if m != nil {
		return m.Pools
	}
	return nil
}

type DeleteSubnetReq struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	SubnetName           string   `protobuf:"bytes,2,opt,name=subnetName,proto3" json:"subnetName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubnetReq) Reset()         { *m = DeleteSubnetReq{} }
func (m *DeleteSubnetReq) String() string { return proto.CompactTextString(m) }
func (*DeleteSubnetReq) ProtoMessage()    {}
func (*DeleteSubnetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{6}
}

func (m *DeleteSubnetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubnetReq.Unmarshal(m, b)
}
func (m *DeleteSubnetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubnetReq.Marshal(b, m, deterministic)
}
func (m *DeleteSubnetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubnetReq.Merge(m, src)
}
func (m *DeleteSubnetReq) XXX_Size() int {
	return xxx_messageInfo_DeleteSubnetReq.Size(m)
}
func (m *DeleteSubnetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubnetReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubnetReq proto.InternalMessageInfo

func (m *DeleteSubnetReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *DeleteSubnetReq) GetSubnetName() string {
	if m != nil {
		return m.SubnetName
	}
	return ""
}

func init() {
	proto.RegisterType((*DHCPStartReq)(nil), "pb.DHCPStartReq")
	proto.RegisterType((*DHCPStopReq)(nil), "pb.DHCPStopReq")
	proto.RegisterType((*SubnetOptionData)(nil), "pb.SubnetOptionData")
	proto.RegisterType((*SubnetPools)(nil), "pb.SubnetPools")
	proto.RegisterType((*CreateSubnetReq)(nil), "pb.CreateSubnetReq")
	proto.RegisterType((*UpdateSubnetReq)(nil), "pb.UpdateSubnetReq")
	proto.RegisterType((*DeleteSubnetReq)(nil), "pb.DeleteSubnetReq")
}

func init() { proto.RegisterFile("dhcp.proto", fileDescriptor_0b4c6fed4d91e328) }

var fileDescriptor_0b4c6fed4d91e328 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x52, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x26, 0x6d, 0x53, 0xed, 0x54, 0xa8, 0x2c, 0x3d, 0xec, 0x41, 0xa4, 0x04, 0xc4, 0x9e, 0x7a,
	0x50, 0x5f, 0x40, 0x52, 0x4a, 0x41, 0xd0, 0xb2, 0x41, 0x3c, 0x6f, 0x92, 0x51, 0x03, 0x69, 0x76,
	0xdd, 0x5d, 0x2b, 0xbe, 0x8e, 0x4f, 0x2a, 0x3b, 0x5b, 0x49, 0xf0, 0xa0, 0x17, 0xf1, 0xf6, 0xed,
	0x37, 0xf3, 0xfd, 0x64, 0x08, 0x40, 0xf9, 0x5c, 0xe8, 0x85, 0x36, 0xca, 0x29, 0xd6, 0xd3, 0x79,
	0xb2, 0x86, 0xa3, 0xe5, 0x3a, 0xdd, 0x64, 0x4e, 0x1a, 0x27, 0xf0, 0x85, 0x71, 0x38, 0xb0, 0x68,
	0x76, 0x55, 0x81, 0x3c, 0x9a, 0x45, 0xf3, 0x91, 0xf8, 0x7a, 0xb2, 0x53, 0x80, 0x42, 0x35, 0x8f,
	0xd5, 0xd3, 0xaa, 0xaa, 0x91, 0xf7, 0x68, 0xd8, 0x61, 0x92, 0x73, 0x18, 0x07, 0x27, 0xa5, 0x7f,
	0x34, 0x4a, 0x3e, 0x22, 0x38, 0xce, 0x5e, 0xf3, 0x06, 0xdd, 0x9d, 0x76, 0x95, 0x6a, 0x96, 0xd2,
	0x49, 0xef, 0x7e, 0x5d, 0xbf, 0xc9, 0x77, 0x9b, 0x61, 0x53, 0x92, 0xe2, 0x50, 0x74, 0x18, 0xc6,
	0x60, 0x90, 0xaa, 0x32, 0xe4, 0xc6, 0x82, 0x30, 0x3b, 0x81, 0x51, 0x6a, 0x77, 0x2b, 0x65, 0xb6,
	0xd2, 0xf1, 0x3e, 0x49, 0x5a, 0xc2, 0x2b, 0xbc, 0x33, 0x1f, 0x50, 0x3a, 0x61, 0xcf, 0xdd, 0xca,
	0x2d, 0xf2, 0x38, 0x70, 0x1e, 0xb3, 0x29, 0xc4, 0x99, 0x96, 0x05, 0xf2, 0x21, 0x91, 0xe1, 0x91,
	0x3c, 0xc0, 0x38, 0x74, 0xdc, 0x28, 0x55, 0x5b, 0x76, 0x05, 0xd0, 0x96, 0xe5, 0xd1, 0xac, 0x3f,
	0x1f, 0x5f, 0x4c, 0x17, 0x3a, 0x5f, 0x7c, 0xff, 0x10, 0xd1, 0xd9, 0xf3, 0x71, 0x5a, 0xa9, 0x7a,
	0x7f, 0x2c, 0xc2, 0x89, 0x81, 0x49, 0x6a, 0x50, 0x3a, 0x0c, 0xca, 0x5f, 0x6f, 0x6e, 0x69, 0x8d,
	0x5a, 0xef, 0x6f, 0xde, 0x32, 0xec, 0x0c, 0x62, 0x6f, 0x6a, 0x79, 0x9f, 0x1a, 0x4d, 0xda, 0x46,
	0x54, 0x5b, 0x84, 0xa9, 0xcf, 0xbc, 0xd7, 0xe5, 0xff, 0x66, 0xde, 0xc0, 0x64, 0x89, 0x35, 0xfe,
	0x49, 0x66, 0x3e, 0xa4, 0x1f, 0xf6, 0xf2, 0x33, 0x00, 0x00, 0xff, 0xff, 0x23, 0x06, 0x47, 0xf9,
	0xbe, 0x02, 0x00, 0x00,
}
