// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dhcp.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DHCPStartReq struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	ConfigFile           string   `protobuf:"bytes,2,opt,name=configFile,proto3" json:"configFile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHCPStartReq) Reset()         { *m = DHCPStartReq{} }
func (m *DHCPStartReq) String() string { return proto.CompactTextString(m) }
func (*DHCPStartReq) ProtoMessage()    {}
func (*DHCPStartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{0}
}

func (m *DHCPStartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHCPStartReq.Unmarshal(m, b)
}
func (m *DHCPStartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHCPStartReq.Marshal(b, m, deterministic)
}
func (m *DHCPStartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHCPStartReq.Merge(m, src)
}
func (m *DHCPStartReq) XXX_Size() int {
	return xxx_messageInfo_DHCPStartReq.Size(m)
}
func (m *DHCPStartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DHCPStartReq.DiscardUnknown(m)
}

var xxx_messageInfo_DHCPStartReq proto.InternalMessageInfo

func (m *DHCPStartReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *DHCPStartReq) GetConfigFile() string {
	if m != nil {
		return m.ConfigFile
	}
	return ""
}

type DHCPStopReq struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHCPStopReq) Reset()         { *m = DHCPStopReq{} }
func (m *DHCPStopReq) String() string { return proto.CompactTextString(m) }
func (*DHCPStopReq) ProtoMessage()    {}
func (*DHCPStopReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{1}
}

func (m *DHCPStopReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHCPStopReq.Unmarshal(m, b)
}
func (m *DHCPStopReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHCPStopReq.Marshal(b, m, deterministic)
}
func (m *DHCPStopReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHCPStopReq.Merge(m, src)
}
func (m *DHCPStopReq) XXX_Size() int {
	return xxx_messageInfo_DHCPStopReq.Size(m)
}
func (m *DHCPStopReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DHCPStopReq.DiscardUnknown(m)
}

var xxx_messageInfo_DHCPStopReq proto.InternalMessageInfo

func (m *DHCPStopReq) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type Subnet4OptionData struct {
	AlwaysSend           bool     `protobuf:"varint,1,opt,name=AlwaysSend,proto3" json:"AlwaysSend,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
	CsvFormat            bool     `protobuf:"varint,3,opt,name=CsvFormat,proto3" json:"CsvFormat,omitempty"`
	Data                 string   `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	Space                string   `protobuf:"bytes,6,opt,name=Space,proto3" json:"Space,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subnet4OptionData) Reset()         { *m = Subnet4OptionData{} }
func (m *Subnet4OptionData) String() string { return proto.CompactTextString(m) }
func (*Subnet4OptionData) ProtoMessage()    {}
func (*Subnet4OptionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{2}
}

func (m *Subnet4OptionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subnet4OptionData.Unmarshal(m, b)
}
func (m *Subnet4OptionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subnet4OptionData.Marshal(b, m, deterministic)
}
func (m *Subnet4OptionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subnet4OptionData.Merge(m, src)
}
func (m *Subnet4OptionData) XXX_Size() int {
	return xxx_messageInfo_Subnet4OptionData.Size(m)
}
func (m *Subnet4OptionData) XXX_DiscardUnknown() {
	xxx_messageInfo_Subnet4OptionData.DiscardUnknown(m)
}

var xxx_messageInfo_Subnet4OptionData proto.InternalMessageInfo

func (m *Subnet4OptionData) GetAlwaysSend() bool {
	if m != nil {
		return m.AlwaysSend
	}
	return false
}

func (m *Subnet4OptionData) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Subnet4OptionData) GetCsvFormat() bool {
	if m != nil {
		return m.CsvFormat
	}
	return false
}

func (m *Subnet4OptionData) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Subnet4OptionData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Subnet4OptionData) GetSpace() string {
	if m != nil {
		return m.Space
	}
	return ""
}

type Subnet4Pools struct {
	OptionData           []*Subnet4OptionData `protobuf:"bytes,1,rep,name=OptionData,proto3" json:"OptionData,omitempty"`
	Pool                 string               `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Subnet4Pools) Reset()         { *m = Subnet4Pools{} }
func (m *Subnet4Pools) String() string { return proto.CompactTextString(m) }
func (*Subnet4Pools) ProtoMessage()    {}
func (*Subnet4Pools) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{3}
}

func (m *Subnet4Pools) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subnet4Pools.Unmarshal(m, b)
}
func (m *Subnet4Pools) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subnet4Pools.Marshal(b, m, deterministic)
}
func (m *Subnet4Pools) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subnet4Pools.Merge(m, src)
}
func (m *Subnet4Pools) XXX_Size() int {
	return xxx_messageInfo_Subnet4Pools.Size(m)
}
func (m *Subnet4Pools) XXX_DiscardUnknown() {
	xxx_messageInfo_Subnet4Pools.DiscardUnknown(m)
}

var xxx_messageInfo_Subnet4Pools proto.InternalMessageInfo

func (m *Subnet4Pools) GetOptionData() []*Subnet4OptionData {
	if m != nil {
		return m.OptionData
	}
	return nil
}

func (m *Subnet4Pools) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

type CreateSubnet4Req struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	SubnetName           string   `protobuf:"bytes,2,opt,name=subnetName,proto3" json:"subnetName,omitempty"`
	Pools                string   `protobuf:"bytes,3,opt,name=pools,proto3" json:"pools,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSubnet4Req) Reset()         { *m = CreateSubnet4Req{} }
func (m *CreateSubnet4Req) String() string { return proto.CompactTextString(m) }
func (*CreateSubnet4Req) ProtoMessage()    {}
func (*CreateSubnet4Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{4}
}

func (m *CreateSubnet4Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubnet4Req.Unmarshal(m, b)
}
func (m *CreateSubnet4Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubnet4Req.Marshal(b, m, deterministic)
}
func (m *CreateSubnet4Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubnet4Req.Merge(m, src)
}
func (m *CreateSubnet4Req) XXX_Size() int {
	return xxx_messageInfo_CreateSubnet4Req.Size(m)
}
func (m *CreateSubnet4Req) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubnet4Req.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubnet4Req proto.InternalMessageInfo

func (m *CreateSubnet4Req) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *CreateSubnet4Req) GetSubnetName() string {
	if m != nil {
		return m.SubnetName
	}
	return ""
}

func (m *CreateSubnet4Req) GetPools() string {
	if m != nil {
		return m.Pools
	}
	return ""
}

type UpdateSubnet4Req struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	SubnetName           string   `protobuf:"bytes,2,opt,name=subnetName,proto3" json:"subnetName,omitempty"`
	Pools                string   `protobuf:"bytes,3,opt,name=pools,proto3" json:"pools,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateSubnet4Req) Reset()         { *m = UpdateSubnet4Req{} }
func (m *UpdateSubnet4Req) String() string { return proto.CompactTextString(m) }
func (*UpdateSubnet4Req) ProtoMessage()    {}
func (*UpdateSubnet4Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{5}
}

func (m *UpdateSubnet4Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubnet4Req.Unmarshal(m, b)
}
func (m *UpdateSubnet4Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubnet4Req.Marshal(b, m, deterministic)
}
func (m *UpdateSubnet4Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubnet4Req.Merge(m, src)
}
func (m *UpdateSubnet4Req) XXX_Size() int {
	return xxx_messageInfo_UpdateSubnet4Req.Size(m)
}
func (m *UpdateSubnet4Req) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubnet4Req.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubnet4Req proto.InternalMessageInfo

func (m *UpdateSubnet4Req) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *UpdateSubnet4Req) GetSubnetName() string {
	if m != nil {
		return m.SubnetName
	}
	return ""
}

func (m *UpdateSubnet4Req) GetPools() string {
	if m != nil {
		return m.Pools
	}
	return ""
}

type DeleteSubnet4Req struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	SubnetName           string   `protobuf:"bytes,2,opt,name=subnetName,proto3" json:"subnetName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubnet4Req) Reset()         { *m = DeleteSubnet4Req{} }
func (m *DeleteSubnet4Req) String() string { return proto.CompactTextString(m) }
func (*DeleteSubnet4Req) ProtoMessage()    {}
func (*DeleteSubnet4Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{6}
}

func (m *DeleteSubnet4Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubnet4Req.Unmarshal(m, b)
}
func (m *DeleteSubnet4Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubnet4Req.Marshal(b, m, deterministic)
}
func (m *DeleteSubnet4Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubnet4Req.Merge(m, src)
}
func (m *DeleteSubnet4Req) XXX_Size() int {
	return xxx_messageInfo_DeleteSubnet4Req.Size(m)
}
func (m *DeleteSubnet4Req) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubnet4Req.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubnet4Req proto.InternalMessageInfo

func (m *DeleteSubnet4Req) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *DeleteSubnet4Req) GetSubnetName() string {
	if m != nil {
		return m.SubnetName
	}
	return ""
}

func init() {
	proto.RegisterType((*DHCPStartReq)(nil), "pb.DHCPStartReq")
	proto.RegisterType((*DHCPStopReq)(nil), "pb.DHCPStopReq")
	proto.RegisterType((*Subnet4OptionData)(nil), "pb.Subnet4OptionData")
	proto.RegisterType((*Subnet4Pools)(nil), "pb.Subnet4Pools")
	proto.RegisterType((*CreateSubnet4Req)(nil), "pb.CreateSubnet4Req")
	proto.RegisterType((*UpdateSubnet4Req)(nil), "pb.UpdateSubnet4Req")
	proto.RegisterType((*DeleteSubnet4Req)(nil), "pb.DeleteSubnet4Req")
}

func init() { proto.RegisterFile("dhcp.proto", fileDescriptor_0b4c6fed4d91e328) }

var fileDescriptor_0b4c6fed4d91e328 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x52, 0x4d, 0x4b, 0xf3, 0x40,
	0x10, 0x26, 0x6d, 0xd3, 0xf7, 0xcd, 0xb4, 0x87, 0xba, 0x28, 0xec, 0x41, 0xa4, 0xe4, 0x62, 0x4f,
	0x39, 0xf8, 0xf1, 0x03, 0x24, 0xa1, 0xf4, 0x20, 0x5a, 0x36, 0x78, 0xf0, 0xb8, 0x49, 0x46, 0x0d,
	0xa4, 0xd9, 0x35, 0xbb, 0x56, 0xfc, 0x3d, 0xfe, 0x51, 0xd9, 0x49, 0x24, 0x01, 0x41, 0x2f, 0x7a,
	0x9b, 0x79, 0x32, 0xcf, 0x47, 0x1e, 0x16, 0xa0, 0x78, 0xca, 0x75, 0xa4, 0x1b, 0x65, 0x15, 0x1b,
	0xe9, 0x2c, 0xdc, 0xc0, 0x3c, 0xd9, 0xc4, 0xdb, 0xd4, 0xca, 0xc6, 0x0a, 0x7c, 0x66, 0x1c, 0xfe,
	0x19, 0x6c, 0xf6, 0x65, 0x8e, 0xdc, 0x5b, 0x7a, 0xab, 0x40, 0x7c, 0xae, 0xec, 0x04, 0x20, 0x57,
	0xf5, 0x43, 0xf9, 0xb8, 0x2e, 0x2b, 0xe4, 0x23, 0xfa, 0x38, 0x40, 0xc2, 0x53, 0x98, 0xb5, 0x4a,
	0x4a, 0x7f, 0x2b, 0x14, 0xbe, 0x7b, 0x70, 0x90, 0xbe, 0x64, 0x35, 0xda, 0x8b, 0x5b, 0x6d, 0x4b,
	0x55, 0x27, 0xd2, 0x4a, 0x27, 0x7f, 0x55, 0xbd, 0xca, 0x37, 0x93, 0x62, 0x5d, 0x10, 0xe5, 0xbf,
	0x18, 0x20, 0x8c, 0xc1, 0x24, 0x56, 0x45, 0x6b, 0xec, 0x0b, 0x9a, 0xd9, 0x31, 0x04, 0xb1, 0xd9,
	0xaf, 0x55, 0xb3, 0x93, 0x96, 0x8f, 0x89, 0xd2, 0x03, 0x8e, 0xe1, 0x94, 0xf9, 0x84, 0xec, 0x69,
	0x76, 0xd8, 0x8d, 0xdc, 0x21, 0xf7, 0x5b, 0xcc, 0xcd, 0xec, 0x10, 0xfc, 0x54, 0xcb, 0x1c, 0xf9,
	0x94, 0xc0, 0x76, 0x09, 0xef, 0x61, 0xde, 0x85, 0xdc, 0x2a, 0x55, 0x19, 0x76, 0x09, 0xd0, 0xa7,
	0xe5, 0xde, 0x72, 0xbc, 0x9a, 0x9d, 0x1d, 0x45, 0x3a, 0x8b, 0xbe, 0xfc, 0x8a, 0x18, 0x1c, 0x3a,
	0x43, 0xad, 0x54, 0xd5, 0xf5, 0x45, 0x73, 0x98, 0xc1, 0x22, 0x6e, 0x50, 0x5a, 0xec, 0xa8, 0x3f,
	0xf6, 0x6e, 0xe8, 0x8e, 0x82, 0x77, 0xbd, 0xf7, 0x88, 0x8b, 0xef, 0x54, 0x0d, 0x15, 0x10, 0x88,
	0x76, 0x71, 0x1e, 0x77, 0xba, 0xf8, 0x5b, 0x8f, 0x6b, 0x58, 0x24, 0x58, 0xe1, 0xef, 0x78, 0x64,
	0x53, 0x7a, 0x94, 0xe7, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x61, 0x90, 0xdf, 0x6d, 0xa2, 0x02,
	0x00, 0x00,
}
