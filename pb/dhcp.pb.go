// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dhcp.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Option struct {
	AlwaysSend           bool     `protobuf:"varint,1,opt,name=alwaysSend,proto3" json:"alwaysSend,omitempty"`
	Code                 uint64   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	CsvFormat            bool     `protobuf:"varint,3,opt,name=csvFormat,proto3" json:"csvFormat,omitempty"`
	Data                 string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Space                string   `protobuf:"bytes,6,opt,name=space,proto3" json:"space,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}
func (*Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{0}
}

func (m *Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Option.Unmarshal(m, b)
}
func (m *Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Option.Marshal(b, m, deterministic)
}
func (m *Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Option.Merge(m, src)
}
func (m *Option) XXX_Size() int {
	return xxx_messageInfo_Option.Size(m)
}
func (m *Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Option proto.InternalMessageInfo

func (m *Option) GetAlwaysSend() bool {
	if m != nil {
		return m.AlwaysSend
	}
	return false
}

func (m *Option) GetCode() uint64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Option) GetCsvFormat() bool {
	if m != nil {
		return m.CsvFormat
	}
	return false
}

func (m *Option) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Option) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Option) GetSpace() string {
	if m != nil {
		return m.Space
	}
	return ""
}

type Reservation struct {
	Prefixes             string    `protobuf:"bytes,1,opt,name=prefixes,proto3" json:"prefixes,omitempty"`
	Hostname             string    `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Duid                 string    `protobuf:"bytes,3,opt,name=duid,proto3" json:"duid,omitempty"`
	IpAddresses          string    `protobuf:"bytes,4,opt,name=ipAddresses,proto3" json:"ipAddresses,omitempty"`
	NextServer           string    `protobuf:"bytes,5,opt,name=nextServer,proto3" json:"nextServer,omitempty"`
	OptData              []*Option `protobuf:"bytes,6,rep,name=optData,proto3" json:"optData,omitempty"`
	HwAddress            string    `protobuf:"bytes,7,opt,name=hwAddress,proto3" json:"hwAddress,omitempty"`
	CircuitId            string    `protobuf:"bytes,8,opt,name=circuitId,proto3" json:"circuitId,omitempty"`
	ClientId             string    `protobuf:"bytes,9,opt,name=clientId,proto3" json:"clientId,omitempty"`
	ServerHostname       string    `protobuf:"bytes,10,opt,name=serverHostname,proto3" json:"serverHostname,omitempty"`
	BootFileName         string    `protobuf:"bytes,11,opt,name=bootFileName,proto3" json:"bootFileName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Reservation) Reset()         { *m = Reservation{} }
func (m *Reservation) String() string { return proto.CompactTextString(m) }
func (*Reservation) ProtoMessage()    {}
func (*Reservation) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{1}
}

func (m *Reservation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reservation.Unmarshal(m, b)
}
func (m *Reservation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reservation.Marshal(b, m, deterministic)
}
func (m *Reservation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reservation.Merge(m, src)
}
func (m *Reservation) XXX_Size() int {
	return xxx_messageInfo_Reservation.Size(m)
}
func (m *Reservation) XXX_DiscardUnknown() {
	xxx_messageInfo_Reservation.DiscardUnknown(m)
}

var xxx_messageInfo_Reservation proto.InternalMessageInfo

func (m *Reservation) GetPrefixes() string {
	if m != nil {
		return m.Prefixes
	}
	return ""
}

func (m *Reservation) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *Reservation) GetDuid() string {
	if m != nil {
		return m.Duid
	}
	return ""
}

func (m *Reservation) GetIpAddresses() string {
	if m != nil {
		return m.IpAddresses
	}
	return ""
}

func (m *Reservation) GetNextServer() string {
	if m != nil {
		return m.NextServer
	}
	return ""
}

func (m *Reservation) GetOptData() []*Option {
	if m != nil {
		return m.OptData
	}
	return nil
}

func (m *Reservation) GetHwAddress() string {
	if m != nil {
		return m.HwAddress
	}
	return ""
}

func (m *Reservation) GetCircuitId() string {
	if m != nil {
		return m.CircuitId
	}
	return ""
}

func (m *Reservation) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Reservation) GetServerHostname() string {
	if m != nil {
		return m.ServerHostname
	}
	return ""
}

func (m *Reservation) GetBootFileName() string {
	if m != nil {
		return m.BootFileName
	}
	return ""
}

type Pools struct {
	Options              []*Option `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	Pool                 string    `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
	ValidLifetime        string    `protobuf:"bytes,3,opt,name=validLifetime,proto3" json:"validLifetime,omitempty"`
	MaxValidLifetime     string    `protobuf:"bytes,4,opt,name=maxValidLifetime,proto3" json:"maxValidLifetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Pools) Reset()         { *m = Pools{} }
func (m *Pools) String() string { return proto.CompactTextString(m) }
func (*Pools) ProtoMessage()    {}
func (*Pools) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{2}
}

func (m *Pools) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pools.Unmarshal(m, b)
}
func (m *Pools) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pools.Marshal(b, m, deterministic)
}
func (m *Pools) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pools.Merge(m, src)
}
func (m *Pools) XXX_Size() int {
	return xxx_messageInfo_Pools.Size(m)
}
func (m *Pools) XXX_DiscardUnknown() {
	xxx_messageInfo_Pools.DiscardUnknown(m)
}

var xxx_messageInfo_Pools proto.InternalMessageInfo

func (m *Pools) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *Pools) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *Pools) GetValidLifetime() string {
	if m != nil {
		return m.ValidLifetime
	}
	return ""
}

func (m *Pools) GetMaxValidLifetime() string {
	if m != nil {
		return m.MaxValidLifetime
	}
	return ""
}

type Poolv6S struct {
	Options              []*Option `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	Pool                 string    `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
	ValidLifetime        string    `protobuf:"bytes,3,opt,name=validLifetime,proto3" json:"validLifetime,omitempty"`
	MaxValidLifetime     string    `protobuf:"bytes,4,opt,name=maxValidLifetime,proto3" json:"maxValidLifetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Poolv6S) Reset()         { *m = Poolv6S{} }
func (m *Poolv6S) String() string { return proto.CompactTextString(m) }
func (*Poolv6S) ProtoMessage()    {}
func (*Poolv6S) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{3}
}

func (m *Poolv6S) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Poolv6S.Unmarshal(m, b)
}
func (m *Poolv6S) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Poolv6S.Marshal(b, m, deterministic)
}
func (m *Poolv6S) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Poolv6S.Merge(m, src)
}
func (m *Poolv6S) XXX_Size() int {
	return xxx_messageInfo_Poolv6S.Size(m)
}
func (m *Poolv6S) XXX_DiscardUnknown() {
	xxx_messageInfo_Poolv6S.DiscardUnknown(m)
}

var xxx_messageInfo_Poolv6S proto.InternalMessageInfo

func (m *Poolv6S) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *Poolv6S) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *Poolv6S) GetValidLifetime() string {
	if m != nil {
		return m.ValidLifetime
	}
	return ""
}

func (m *Poolv6S) GetMaxValidLifetime() string {
	if m != nil {
		return m.MaxValidLifetime
	}
	return ""
}

type StartDHCPv4Req struct {
	Config               string   `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartDHCPv4Req) Reset()         { *m = StartDHCPv4Req{} }
func (m *StartDHCPv4Req) String() string { return proto.CompactTextString(m) }
func (*StartDHCPv4Req) ProtoMessage()    {}
func (*StartDHCPv4Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{4}
}

func (m *StartDHCPv4Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartDHCPv4Req.Unmarshal(m, b)
}
func (m *StartDHCPv4Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartDHCPv4Req.Marshal(b, m, deterministic)
}
func (m *StartDHCPv4Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartDHCPv4Req.Merge(m, src)
}
func (m *StartDHCPv4Req) XXX_Size() int {
	return xxx_messageInfo_StartDHCPv4Req.Size(m)
}
func (m *StartDHCPv4Req) XXX_DiscardUnknown() {
	xxx_messageInfo_StartDHCPv4Req.DiscardUnknown(m)
}

var xxx_messageInfo_StartDHCPv4Req proto.InternalMessageInfo

func (m *StartDHCPv4Req) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

type StopDHCPv4Req struct {
	Config               string   `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopDHCPv4Req) Reset()         { *m = StopDHCPv4Req{} }
func (m *StopDHCPv4Req) String() string { return proto.CompactTextString(m) }
func (*StopDHCPv4Req) ProtoMessage()    {}
func (*StopDHCPv4Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{5}
}

func (m *StopDHCPv4Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopDHCPv4Req.Unmarshal(m, b)
}
func (m *StopDHCPv4Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopDHCPv4Req.Marshal(b, m, deterministic)
}
func (m *StopDHCPv4Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopDHCPv4Req.Merge(m, src)
}
func (m *StopDHCPv4Req) XXX_Size() int {
	return xxx_messageInfo_StopDHCPv4Req.Size(m)
}
func (m *StopDHCPv4Req) XXX_DiscardUnknown() {
	xxx_messageInfo_StopDHCPv4Req.DiscardUnknown(m)
}

var xxx_messageInfo_StopDHCPv4Req proto.InternalMessageInfo

func (m *StopDHCPv4Req) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

type CreateSubnetv4Req struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subnet               string         `protobuf:"bytes,2,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Options              []*Option      `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	Reservations         []*Reservation `protobuf:"bytes,4,rep,name=reservations,proto3" json:"reservations,omitempty"`
	ValidLifetime        string         `protobuf:"bytes,5,opt,name=validLifetime,proto3" json:"validLifetime,omitempty"`
	Pool                 []*Pools       `protobuf:"bytes,6,rep,name=pool,proto3" json:"pool,omitempty"`
	Gateway              string         `protobuf:"bytes,7,opt,name=gateway,proto3" json:"gateway,omitempty"`
	DnsServer            string         `protobuf:"bytes,8,opt,name=dnsServer,proto3" json:"dnsServer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateSubnetv4Req) Reset()         { *m = CreateSubnetv4Req{} }
func (m *CreateSubnetv4Req) String() string { return proto.CompactTextString(m) }
func (*CreateSubnetv4Req) ProtoMessage()    {}
func (*CreateSubnetv4Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{6}
}

func (m *CreateSubnetv4Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubnetv4Req.Unmarshal(m, b)
}
func (m *CreateSubnetv4Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubnetv4Req.Marshal(b, m, deterministic)
}
func (m *CreateSubnetv4Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubnetv4Req.Merge(m, src)
}
func (m *CreateSubnetv4Req) XXX_Size() int {
	return xxx_messageInfo_CreateSubnetv4Req.Size(m)
}
func (m *CreateSubnetv4Req) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubnetv4Req.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubnetv4Req proto.InternalMessageInfo

func (m *CreateSubnetv4Req) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateSubnetv4Req) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *CreateSubnetv4Req) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *CreateSubnetv4Req) GetReservations() []*Reservation {
	if m != nil {
		return m.Reservations
	}
	return nil
}

func (m *CreateSubnetv4Req) GetValidLifetime() string {
	if m != nil {
		return m.ValidLifetime
	}
	return ""
}

func (m *CreateSubnetv4Req) GetPool() []*Pools {
	if m != nil {
		return m.Pool
	}
	return nil
}

func (m *CreateSubnetv4Req) GetGateway() string {
	if m != nil {
		return m.Gateway
	}
	return ""
}

func (m *CreateSubnetv4Req) GetDnsServer() string {
	if m != nil {
		return m.DnsServer
	}
	return ""
}

type UpdateSubnetv4Req struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subnet               string         `protobuf:"bytes,2,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Options              []*Option      `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	Reservations         []*Reservation `protobuf:"bytes,4,rep,name=reservations,proto3" json:"reservations,omitempty"`
	ValidLifetime        string         `protobuf:"bytes,5,opt,name=validLifetime,proto3" json:"validLifetime,omitempty"`
	Pool                 []*Pools       `protobuf:"bytes,6,rep,name=pool,proto3" json:"pool,omitempty"`
	Gateway              string         `protobuf:"bytes,7,opt,name=gateway,proto3" json:"gateway,omitempty"`
	DnsServer            string         `protobuf:"bytes,8,opt,name=dnsServer,proto3" json:"dnsServer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateSubnetv4Req) Reset()         { *m = UpdateSubnetv4Req{} }
func (m *UpdateSubnetv4Req) String() string { return proto.CompactTextString(m) }
func (*UpdateSubnetv4Req) ProtoMessage()    {}
func (*UpdateSubnetv4Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{7}
}

func (m *UpdateSubnetv4Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubnetv4Req.Unmarshal(m, b)
}
func (m *UpdateSubnetv4Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubnetv4Req.Marshal(b, m, deterministic)
}
func (m *UpdateSubnetv4Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubnetv4Req.Merge(m, src)
}
func (m *UpdateSubnetv4Req) XXX_Size() int {
	return xxx_messageInfo_UpdateSubnetv4Req.Size(m)
}
func (m *UpdateSubnetv4Req) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubnetv4Req.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubnetv4Req proto.InternalMessageInfo

func (m *UpdateSubnetv4Req) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSubnetv4Req) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *UpdateSubnetv4Req) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *UpdateSubnetv4Req) GetReservations() []*Reservation {
	if m != nil {
		return m.Reservations
	}
	return nil
}

func (m *UpdateSubnetv4Req) GetValidLifetime() string {
	if m != nil {
		return m.ValidLifetime
	}
	return ""
}

func (m *UpdateSubnetv4Req) GetPool() []*Pools {
	if m != nil {
		return m.Pool
	}
	return nil
}

func (m *UpdateSubnetv4Req) GetGateway() string {
	if m != nil {
		return m.Gateway
	}
	return ""
}

func (m *UpdateSubnetv4Req) GetDnsServer() string {
	if m != nil {
		return m.DnsServer
	}
	return ""
}

type DeleteSubnetv4Req struct {
	Subnet               string   `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubnetv4Req) Reset()         { *m = DeleteSubnetv4Req{} }
func (m *DeleteSubnetv4Req) String() string { return proto.CompactTextString(m) }
func (*DeleteSubnetv4Req) ProtoMessage()    {}
func (*DeleteSubnetv4Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{8}
}

func (m *DeleteSubnetv4Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubnetv4Req.Unmarshal(m, b)
}
func (m *DeleteSubnetv4Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubnetv4Req.Marshal(b, m, deterministic)
}
func (m *DeleteSubnetv4Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubnetv4Req.Merge(m, src)
}
func (m *DeleteSubnetv4Req) XXX_Size() int {
	return xxx_messageInfo_DeleteSubnetv4Req.Size(m)
}
func (m *DeleteSubnetv4Req) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubnetv4Req.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubnetv4Req proto.InternalMessageInfo

func (m *DeleteSubnetv4Req) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *DeleteSubnetv4Req) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateSubnetv4PoolReq struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subnet               string    `protobuf:"bytes,2,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Options              []*Option `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	Pool                 []*Pools  `protobuf:"bytes,4,rep,name=pool,proto3" json:"pool,omitempty"`
	ValidLifetime        string    `protobuf:"bytes,5,opt,name=validLifetime,proto3" json:"validLifetime,omitempty"`
	MaxValidLifetime     string    `protobuf:"bytes,6,opt,name=maxValidLifetime,proto3" json:"maxValidLifetime,omitempty"`
	Gateway              string    `protobuf:"bytes,7,opt,name=gateway,proto3" json:"gateway,omitempty"`
	DnsServer            string    `protobuf:"bytes,8,opt,name=dnsServer,proto3" json:"dnsServer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateSubnetv4PoolReq) Reset()         { *m = CreateSubnetv4PoolReq{} }
func (m *CreateSubnetv4PoolReq) String() string { return proto.CompactTextString(m) }
func (*CreateSubnetv4PoolReq) ProtoMessage()    {}
func (*CreateSubnetv4PoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{9}
}

func (m *CreateSubnetv4PoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubnetv4PoolReq.Unmarshal(m, b)
}
func (m *CreateSubnetv4PoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubnetv4PoolReq.Marshal(b, m, deterministic)
}
func (m *CreateSubnetv4PoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubnetv4PoolReq.Merge(m, src)
}
func (m *CreateSubnetv4PoolReq) XXX_Size() int {
	return xxx_messageInfo_CreateSubnetv4PoolReq.Size(m)
}
func (m *CreateSubnetv4PoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubnetv4PoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubnetv4PoolReq proto.InternalMessageInfo

func (m *CreateSubnetv4PoolReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateSubnetv4PoolReq) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *CreateSubnetv4PoolReq) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *CreateSubnetv4PoolReq) GetPool() []*Pools {
	if m != nil {
		return m.Pool
	}
	return nil
}

func (m *CreateSubnetv4PoolReq) GetValidLifetime() string {
	if m != nil {
		return m.ValidLifetime
	}
	return ""
}

func (m *CreateSubnetv4PoolReq) GetMaxValidLifetime() string {
	if m != nil {
		return m.MaxValidLifetime
	}
	return ""
}

func (m *CreateSubnetv4PoolReq) GetGateway() string {
	if m != nil {
		return m.Gateway
	}
	return ""
}

func (m *CreateSubnetv4PoolReq) GetDnsServer() string {
	if m != nil {
		return m.DnsServer
	}
	return ""
}

type UpdateSubnetv4PoolReq struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Options              []*Option `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	Pool                 string    `protobuf:"bytes,3,opt,name=pool,proto3" json:"pool,omitempty"`
	Subnet               string    `protobuf:"bytes,4,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Oldpool              string    `protobuf:"bytes,5,opt,name=oldpool,proto3" json:"oldpool,omitempty"`
	ValidLifetime        string    `protobuf:"bytes,6,opt,name=validLifetime,proto3" json:"validLifetime,omitempty"`
	MaxValidLifetime     string    `protobuf:"bytes,7,opt,name=maxValidLifetime,proto3" json:"maxValidLifetime,omitempty"`
	Gateway              string    `protobuf:"bytes,9,opt,name=gateway,proto3" json:"gateway,omitempty"`
	DnsServer            string    `protobuf:"bytes,10,opt,name=dnsServer,proto3" json:"dnsServer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateSubnetv4PoolReq) Reset()         { *m = UpdateSubnetv4PoolReq{} }
func (m *UpdateSubnetv4PoolReq) String() string { return proto.CompactTextString(m) }
func (*UpdateSubnetv4PoolReq) ProtoMessage()    {}
func (*UpdateSubnetv4PoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{10}
}

func (m *UpdateSubnetv4PoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubnetv4PoolReq.Unmarshal(m, b)
}
func (m *UpdateSubnetv4PoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubnetv4PoolReq.Marshal(b, m, deterministic)
}
func (m *UpdateSubnetv4PoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubnetv4PoolReq.Merge(m, src)
}
func (m *UpdateSubnetv4PoolReq) XXX_Size() int {
	return xxx_messageInfo_UpdateSubnetv4PoolReq.Size(m)
}
func (m *UpdateSubnetv4PoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubnetv4PoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubnetv4PoolReq proto.InternalMessageInfo

func (m *UpdateSubnetv4PoolReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSubnetv4PoolReq) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *UpdateSubnetv4PoolReq) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *UpdateSubnetv4PoolReq) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *UpdateSubnetv4PoolReq) GetOldpool() string {
	if m != nil {
		return m.Oldpool
	}
	return ""
}

func (m *UpdateSubnetv4PoolReq) GetValidLifetime() string {
	if m != nil {
		return m.ValidLifetime
	}
	return ""
}

func (m *UpdateSubnetv4PoolReq) GetMaxValidLifetime() string {
	if m != nil {
		return m.MaxValidLifetime
	}
	return ""
}

func (m *UpdateSubnetv4PoolReq) GetGateway() string {
	if m != nil {
		return m.Gateway
	}
	return ""
}

func (m *UpdateSubnetv4PoolReq) GetDnsServer() string {
	if m != nil {
		return m.DnsServer
	}
	return ""
}

type DeleteSubnetv4PoolReq struct {
	Subnet               string   `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Pool                 string   `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubnetv4PoolReq) Reset()         { *m = DeleteSubnetv4PoolReq{} }
func (m *DeleteSubnetv4PoolReq) String() string { return proto.CompactTextString(m) }
func (*DeleteSubnetv4PoolReq) ProtoMessage()    {}
func (*DeleteSubnetv4PoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{11}
}

func (m *DeleteSubnetv4PoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubnetv4PoolReq.Unmarshal(m, b)
}
func (m *DeleteSubnetv4PoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubnetv4PoolReq.Marshal(b, m, deterministic)
}
func (m *DeleteSubnetv4PoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubnetv4PoolReq.Merge(m, src)
}
func (m *DeleteSubnetv4PoolReq) XXX_Size() int {
	return xxx_messageInfo_DeleteSubnetv4PoolReq.Size(m)
}
func (m *DeleteSubnetv4PoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubnetv4PoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubnetv4PoolReq proto.InternalMessageInfo

func (m *DeleteSubnetv4PoolReq) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *DeleteSubnetv4PoolReq) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

type CreateSubnetv4ReservationReq struct {
	Subnet               string    `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Duid                 string    `protobuf:"bytes,2,opt,name=duid,proto3" json:"duid,omitempty"`
	Hostname             string    `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddr               string    `protobuf:"bytes,4,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	NextServer           string    `protobuf:"bytes,5,opt,name=nextServer,proto3" json:"nextServer,omitempty"`
	Options              []*Option `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty"`
	BootFileName         string    `protobuf:"bytes,7,opt,name=bootFileName,proto3" json:"bootFileName,omitempty"`
	CircuitId            string    `protobuf:"bytes,8,opt,name=circuitId,proto3" json:"circuitId,omitempty"`
	ClientId             string    `protobuf:"bytes,9,opt,name=clientId,proto3" json:"clientId,omitempty"`
	HwAddress            string    `protobuf:"bytes,10,opt,name=hwAddress,proto3" json:"hwAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateSubnetv4ReservationReq) Reset()         { *m = CreateSubnetv4ReservationReq{} }
func (m *CreateSubnetv4ReservationReq) String() string { return proto.CompactTextString(m) }
func (*CreateSubnetv4ReservationReq) ProtoMessage()    {}
func (*CreateSubnetv4ReservationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{12}
}

func (m *CreateSubnetv4ReservationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubnetv4ReservationReq.Unmarshal(m, b)
}
func (m *CreateSubnetv4ReservationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubnetv4ReservationReq.Marshal(b, m, deterministic)
}
func (m *CreateSubnetv4ReservationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubnetv4ReservationReq.Merge(m, src)
}
func (m *CreateSubnetv4ReservationReq) XXX_Size() int {
	return xxx_messageInfo_CreateSubnetv4ReservationReq.Size(m)
}
func (m *CreateSubnetv4ReservationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubnetv4ReservationReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubnetv4ReservationReq proto.InternalMessageInfo

func (m *CreateSubnetv4ReservationReq) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *CreateSubnetv4ReservationReq) GetDuid() string {
	if m != nil {
		return m.Duid
	}
	return ""
}

func (m *CreateSubnetv4ReservationReq) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *CreateSubnetv4ReservationReq) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *CreateSubnetv4ReservationReq) GetNextServer() string {
	if m != nil {
		return m.NextServer
	}
	return ""
}

func (m *CreateSubnetv4ReservationReq) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *CreateSubnetv4ReservationReq) GetBootFileName() string {
	if m != nil {
		return m.BootFileName
	}
	return ""
}

func (m *CreateSubnetv4ReservationReq) GetCircuitId() string {
	if m != nil {
		return m.CircuitId
	}
	return ""
}

func (m *CreateSubnetv4ReservationReq) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *CreateSubnetv4ReservationReq) GetHwAddress() string {
	if m != nil {
		return m.HwAddress
	}
	return ""
}

type UpdateSubnetv4ReservationReq struct {
	Subnet               string    `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Duid                 string    `protobuf:"bytes,2,opt,name=duid,proto3" json:"duid,omitempty"`
	Hostname             string    `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddr               string    `protobuf:"bytes,4,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	NextServer           string    `protobuf:"bytes,5,opt,name=nextServer,proto3" json:"nextServer,omitempty"`
	Options              []*Option `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty"`
	BootFileName         string    `protobuf:"bytes,7,opt,name=bootFileName,proto3" json:"bootFileName,omitempty"`
	ServerHostname       string    `protobuf:"bytes,8,opt,name=serverHostname,proto3" json:"serverHostname,omitempty"`
	OldRsvIP             string    `protobuf:"bytes,9,opt,name=oldRsvIP,proto3" json:"oldRsvIP,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateSubnetv4ReservationReq) Reset()         { *m = UpdateSubnetv4ReservationReq{} }
func (m *UpdateSubnetv4ReservationReq) String() string { return proto.CompactTextString(m) }
func (*UpdateSubnetv4ReservationReq) ProtoMessage()    {}
func (*UpdateSubnetv4ReservationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{13}
}

func (m *UpdateSubnetv4ReservationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubnetv4ReservationReq.Unmarshal(m, b)
}
func (m *UpdateSubnetv4ReservationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubnetv4ReservationReq.Marshal(b, m, deterministic)
}
func (m *UpdateSubnetv4ReservationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubnetv4ReservationReq.Merge(m, src)
}
func (m *UpdateSubnetv4ReservationReq) XXX_Size() int {
	return xxx_messageInfo_UpdateSubnetv4ReservationReq.Size(m)
}
func (m *UpdateSubnetv4ReservationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubnetv4ReservationReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubnetv4ReservationReq proto.InternalMessageInfo

func (m *UpdateSubnetv4ReservationReq) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *UpdateSubnetv4ReservationReq) GetDuid() string {
	if m != nil {
		return m.Duid
	}
	return ""
}

func (m *UpdateSubnetv4ReservationReq) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *UpdateSubnetv4ReservationReq) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *UpdateSubnetv4ReservationReq) GetNextServer() string {
	if m != nil {
		return m.NextServer
	}
	return ""
}

func (m *UpdateSubnetv4ReservationReq) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *UpdateSubnetv4ReservationReq) GetBootFileName() string {
	if m != nil {
		return m.BootFileName
	}
	return ""
}

func (m *UpdateSubnetv4ReservationReq) GetServerHostname() string {
	if m != nil {
		return m.ServerHostname
	}
	return ""
}

func (m *UpdateSubnetv4ReservationReq) GetOldRsvIP() string {
	if m != nil {
		return m.OldRsvIP
	}
	return ""
}

type DeleteSubnetv4ReservationReq struct {
	Subnet               string   `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Duid                 string   `protobuf:"bytes,2,opt,name=duid,proto3" json:"duid,omitempty"`
	IpAddr               string   `protobuf:"bytes,3,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	ServerHostname       string   `protobuf:"bytes,4,opt,name=serverHostname,proto3" json:"serverHostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubnetv4ReservationReq) Reset()         { *m = DeleteSubnetv4ReservationReq{} }
func (m *DeleteSubnetv4ReservationReq) String() string { return proto.CompactTextString(m) }
func (*DeleteSubnetv4ReservationReq) ProtoMessage()    {}
func (*DeleteSubnetv4ReservationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{14}
}

func (m *DeleteSubnetv4ReservationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubnetv4ReservationReq.Unmarshal(m, b)
}
func (m *DeleteSubnetv4ReservationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubnetv4ReservationReq.Marshal(b, m, deterministic)
}
func (m *DeleteSubnetv4ReservationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubnetv4ReservationReq.Merge(m, src)
}
func (m *DeleteSubnetv4ReservationReq) XXX_Size() int {
	return xxx_messageInfo_DeleteSubnetv4ReservationReq.Size(m)
}
func (m *DeleteSubnetv4ReservationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubnetv4ReservationReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubnetv4ReservationReq proto.InternalMessageInfo

func (m *DeleteSubnetv4ReservationReq) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *DeleteSubnetv4ReservationReq) GetDuid() string {
	if m != nil {
		return m.Duid
	}
	return ""
}

func (m *DeleteSubnetv4ReservationReq) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *DeleteSubnetv4ReservationReq) GetServerHostname() string {
	if m != nil {
		return m.ServerHostname
	}
	return ""
}

/// start of dhcpv6
type StartDHCPv6Req struct {
	Config               string   `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartDHCPv6Req) Reset()         { *m = StartDHCPv6Req{} }
func (m *StartDHCPv6Req) String() string { return proto.CompactTextString(m) }
func (*StartDHCPv6Req) ProtoMessage()    {}
func (*StartDHCPv6Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{15}
}

func (m *StartDHCPv6Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartDHCPv6Req.Unmarshal(m, b)
}
func (m *StartDHCPv6Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartDHCPv6Req.Marshal(b, m, deterministic)
}
func (m *StartDHCPv6Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartDHCPv6Req.Merge(m, src)
}
func (m *StartDHCPv6Req) XXX_Size() int {
	return xxx_messageInfo_StartDHCPv6Req.Size(m)
}
func (m *StartDHCPv6Req) XXX_DiscardUnknown() {
	xxx_messageInfo_StartDHCPv6Req.DiscardUnknown(m)
}

var xxx_messageInfo_StartDHCPv6Req proto.InternalMessageInfo

func (m *StartDHCPv6Req) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

type StopDHCPv6Req struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopDHCPv6Req) Reset()         { *m = StopDHCPv6Req{} }
func (m *StopDHCPv6Req) String() string { return proto.CompactTextString(m) }
func (*StopDHCPv6Req) ProtoMessage()    {}
func (*StopDHCPv6Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{16}
}

func (m *StopDHCPv6Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopDHCPv6Req.Unmarshal(m, b)
}
func (m *StopDHCPv6Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopDHCPv6Req.Marshal(b, m, deterministic)
}
func (m *StopDHCPv6Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopDHCPv6Req.Merge(m, src)
}
func (m *StopDHCPv6Req) XXX_Size() int {
	return xxx_messageInfo_StopDHCPv6Req.Size(m)
}
func (m *StopDHCPv6Req) XXX_DiscardUnknown() {
	xxx_messageInfo_StopDHCPv6Req.DiscardUnknown(m)
}

var xxx_messageInfo_StopDHCPv6Req proto.InternalMessageInfo

type CreateSubnetv6Req struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subnet               string         `protobuf:"bytes,2,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Options              []*Option      `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	Reservations         []*Reservation `protobuf:"bytes,4,rep,name=reservations,proto3" json:"reservations,omitempty"`
	ValidLifetime        string         `protobuf:"bytes,5,opt,name=validLifetime,proto3" json:"validLifetime,omitempty"`
	Pool                 []*Pools       `protobuf:"bytes,6,rep,name=pool,proto3" json:"pool,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateSubnetv6Req) Reset()         { *m = CreateSubnetv6Req{} }
func (m *CreateSubnetv6Req) String() string { return proto.CompactTextString(m) }
func (*CreateSubnetv6Req) ProtoMessage()    {}
func (*CreateSubnetv6Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{17}
}

func (m *CreateSubnetv6Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubnetv6Req.Unmarshal(m, b)
}
func (m *CreateSubnetv6Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubnetv6Req.Marshal(b, m, deterministic)
}
func (m *CreateSubnetv6Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubnetv6Req.Merge(m, src)
}
func (m *CreateSubnetv6Req) XXX_Size() int {
	return xxx_messageInfo_CreateSubnetv6Req.Size(m)
}
func (m *CreateSubnetv6Req) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubnetv6Req.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubnetv6Req proto.InternalMessageInfo

func (m *CreateSubnetv6Req) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateSubnetv6Req) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *CreateSubnetv6Req) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *CreateSubnetv6Req) GetReservations() []*Reservation {
	if m != nil {
		return m.Reservations
	}
	return nil
}

func (m *CreateSubnetv6Req) GetValidLifetime() string {
	if m != nil {
		return m.ValidLifetime
	}
	return ""
}

func (m *CreateSubnetv6Req) GetPool() []*Pools {
	if m != nil {
		return m.Pool
	}
	return nil
}

type UpdateSubnetv6Req struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subnet               string         `protobuf:"bytes,2,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Options              []*Option      `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	Reservations         []*Reservation `protobuf:"bytes,4,rep,name=reservations,proto3" json:"reservations,omitempty"`
	ValidLifetime        string         `protobuf:"bytes,5,opt,name=validLifetime,proto3" json:"validLifetime,omitempty"`
	Pool                 []*Pools       `protobuf:"bytes,6,rep,name=pool,proto3" json:"pool,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateSubnetv6Req) Reset()         { *m = UpdateSubnetv6Req{} }
func (m *UpdateSubnetv6Req) String() string { return proto.CompactTextString(m) }
func (*UpdateSubnetv6Req) ProtoMessage()    {}
func (*UpdateSubnetv6Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{18}
}

func (m *UpdateSubnetv6Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubnetv6Req.Unmarshal(m, b)
}
func (m *UpdateSubnetv6Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubnetv6Req.Marshal(b, m, deterministic)
}
func (m *UpdateSubnetv6Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubnetv6Req.Merge(m, src)
}
func (m *UpdateSubnetv6Req) XXX_Size() int {
	return xxx_messageInfo_UpdateSubnetv6Req.Size(m)
}
func (m *UpdateSubnetv6Req) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubnetv6Req.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubnetv6Req proto.InternalMessageInfo

func (m *UpdateSubnetv6Req) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSubnetv6Req) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *UpdateSubnetv6Req) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *UpdateSubnetv6Req) GetReservations() []*Reservation {
	if m != nil {
		return m.Reservations
	}
	return nil
}

func (m *UpdateSubnetv6Req) GetValidLifetime() string {
	if m != nil {
		return m.ValidLifetime
	}
	return ""
}

func (m *UpdateSubnetv6Req) GetPool() []*Pools {
	if m != nil {
		return m.Pool
	}
	return nil
}

type DeleteSubnetv6Req struct {
	Subnet               string   `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubnetv6Req) Reset()         { *m = DeleteSubnetv6Req{} }
func (m *DeleteSubnetv6Req) String() string { return proto.CompactTextString(m) }
func (*DeleteSubnetv6Req) ProtoMessage()    {}
func (*DeleteSubnetv6Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{19}
}

func (m *DeleteSubnetv6Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubnetv6Req.Unmarshal(m, b)
}
func (m *DeleteSubnetv6Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubnetv6Req.Marshal(b, m, deterministic)
}
func (m *DeleteSubnetv6Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubnetv6Req.Merge(m, src)
}
func (m *DeleteSubnetv6Req) XXX_Size() int {
	return xxx_messageInfo_DeleteSubnetv6Req.Size(m)
}
func (m *DeleteSubnetv6Req) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubnetv6Req.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubnetv6Req proto.InternalMessageInfo

func (m *DeleteSubnetv6Req) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *DeleteSubnetv6Req) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateSubnetv6PoolReq struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subnet               string         `protobuf:"bytes,2,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Options              []*Option      `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	Pool                 []*Pools       `protobuf:"bytes,4,rep,name=pool,proto3" json:"pool,omitempty"`
	ValidLifetime        string         `protobuf:"bytes,5,opt,name=validLifetime,proto3" json:"validLifetime,omitempty"`
	MaxValidLifetime     string         `protobuf:"bytes,6,opt,name=maxValidLifetime,proto3" json:"maxValidLifetime,omitempty"`
	Reservations         []*Reservation `protobuf:"bytes,7,rep,name=reservations,proto3" json:"reservations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateSubnetv6PoolReq) Reset()         { *m = CreateSubnetv6PoolReq{} }
func (m *CreateSubnetv6PoolReq) String() string { return proto.CompactTextString(m) }
func (*CreateSubnetv6PoolReq) ProtoMessage()    {}
func (*CreateSubnetv6PoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{20}
}

func (m *CreateSubnetv6PoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubnetv6PoolReq.Unmarshal(m, b)
}
func (m *CreateSubnetv6PoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubnetv6PoolReq.Marshal(b, m, deterministic)
}
func (m *CreateSubnetv6PoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubnetv6PoolReq.Merge(m, src)
}
func (m *CreateSubnetv6PoolReq) XXX_Size() int {
	return xxx_messageInfo_CreateSubnetv6PoolReq.Size(m)
}
func (m *CreateSubnetv6PoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubnetv6PoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubnetv6PoolReq proto.InternalMessageInfo

func (m *CreateSubnetv6PoolReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateSubnetv6PoolReq) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *CreateSubnetv6PoolReq) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *CreateSubnetv6PoolReq) GetPool() []*Pools {
	if m != nil {
		return m.Pool
	}
	return nil
}

func (m *CreateSubnetv6PoolReq) GetValidLifetime() string {
	if m != nil {
		return m.ValidLifetime
	}
	return ""
}

func (m *CreateSubnetv6PoolReq) GetMaxValidLifetime() string {
	if m != nil {
		return m.MaxValidLifetime
	}
	return ""
}

func (m *CreateSubnetv6PoolReq) GetReservations() []*Reservation {
	if m != nil {
		return m.Reservations
	}
	return nil
}

type UpdateSubnetv6PoolReq struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Options              []*Option `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	Pool                 string    `protobuf:"bytes,3,opt,name=pool,proto3" json:"pool,omitempty"`
	Subnet               string    `protobuf:"bytes,4,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Oldpool              string    `protobuf:"bytes,5,opt,name=oldpool,proto3" json:"oldpool,omitempty"`
	ValidLifetime        string    `protobuf:"bytes,6,opt,name=validLifetime,proto3" json:"validLifetime,omitempty"`
	MaxValidLifetime     string    `protobuf:"bytes,7,opt,name=maxValidLifetime,proto3" json:"maxValidLifetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateSubnetv6PoolReq) Reset()         { *m = UpdateSubnetv6PoolReq{} }
func (m *UpdateSubnetv6PoolReq) String() string { return proto.CompactTextString(m) }
func (*UpdateSubnetv6PoolReq) ProtoMessage()    {}
func (*UpdateSubnetv6PoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{21}
}

func (m *UpdateSubnetv6PoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubnetv6PoolReq.Unmarshal(m, b)
}
func (m *UpdateSubnetv6PoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubnetv6PoolReq.Marshal(b, m, deterministic)
}
func (m *UpdateSubnetv6PoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubnetv6PoolReq.Merge(m, src)
}
func (m *UpdateSubnetv6PoolReq) XXX_Size() int {
	return xxx_messageInfo_UpdateSubnetv6PoolReq.Size(m)
}
func (m *UpdateSubnetv6PoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubnetv6PoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubnetv6PoolReq proto.InternalMessageInfo

func (m *UpdateSubnetv6PoolReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateSubnetv6PoolReq) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *UpdateSubnetv6PoolReq) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *UpdateSubnetv6PoolReq) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *UpdateSubnetv6PoolReq) GetOldpool() string {
	if m != nil {
		return m.Oldpool
	}
	return ""
}

func (m *UpdateSubnetv6PoolReq) GetValidLifetime() string {
	if m != nil {
		return m.ValidLifetime
	}
	return ""
}

func (m *UpdateSubnetv6PoolReq) GetMaxValidLifetime() string {
	if m != nil {
		return m.MaxValidLifetime
	}
	return ""
}

type DeleteSubnetv6PoolReq struct {
	Subnet               string   `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Pool                 string   `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubnetv6PoolReq) Reset()         { *m = DeleteSubnetv6PoolReq{} }
func (m *DeleteSubnetv6PoolReq) String() string { return proto.CompactTextString(m) }
func (*DeleteSubnetv6PoolReq) ProtoMessage()    {}
func (*DeleteSubnetv6PoolReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{22}
}

func (m *DeleteSubnetv6PoolReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubnetv6PoolReq.Unmarshal(m, b)
}
func (m *DeleteSubnetv6PoolReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubnetv6PoolReq.Marshal(b, m, deterministic)
}
func (m *DeleteSubnetv6PoolReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubnetv6PoolReq.Merge(m, src)
}
func (m *DeleteSubnetv6PoolReq) XXX_Size() int {
	return xxx_messageInfo_DeleteSubnetv6PoolReq.Size(m)
}
func (m *DeleteSubnetv6PoolReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubnetv6PoolReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubnetv6PoolReq proto.InternalMessageInfo

func (m *DeleteSubnetv6PoolReq) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *DeleteSubnetv6PoolReq) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

type CreateSubnetv6ReservationReq struct {
	Subnet               string    `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Duid                 string    `protobuf:"bytes,2,opt,name=duid,proto3" json:"duid,omitempty"`
	Hostname             string    `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddr               string    `protobuf:"bytes,4,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	NextServer           string    `protobuf:"bytes,5,opt,name=nextServer,proto3" json:"nextServer,omitempty"`
	Options              []*Option `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty"`
	BootFileName         string    `protobuf:"bytes,7,opt,name=bootFileName,proto3" json:"bootFileName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateSubnetv6ReservationReq) Reset()         { *m = CreateSubnetv6ReservationReq{} }
func (m *CreateSubnetv6ReservationReq) String() string { return proto.CompactTextString(m) }
func (*CreateSubnetv6ReservationReq) ProtoMessage()    {}
func (*CreateSubnetv6ReservationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{23}
}

func (m *CreateSubnetv6ReservationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubnetv6ReservationReq.Unmarshal(m, b)
}
func (m *CreateSubnetv6ReservationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubnetv6ReservationReq.Marshal(b, m, deterministic)
}
func (m *CreateSubnetv6ReservationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubnetv6ReservationReq.Merge(m, src)
}
func (m *CreateSubnetv6ReservationReq) XXX_Size() int {
	return xxx_messageInfo_CreateSubnetv6ReservationReq.Size(m)
}
func (m *CreateSubnetv6ReservationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubnetv6ReservationReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubnetv6ReservationReq proto.InternalMessageInfo

func (m *CreateSubnetv6ReservationReq) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *CreateSubnetv6ReservationReq) GetDuid() string {
	if m != nil {
		return m.Duid
	}
	return ""
}

func (m *CreateSubnetv6ReservationReq) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *CreateSubnetv6ReservationReq) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *CreateSubnetv6ReservationReq) GetNextServer() string {
	if m != nil {
		return m.NextServer
	}
	return ""
}

func (m *CreateSubnetv6ReservationReq) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *CreateSubnetv6ReservationReq) GetBootFileName() string {
	if m != nil {
		return m.BootFileName
	}
	return ""
}

type UpdateSubnetv6ReservationReq struct {
	Subnet               string    `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Duid                 string    `protobuf:"bytes,2,opt,name=duid,proto3" json:"duid,omitempty"`
	Hostname             string    `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddr               string    `protobuf:"bytes,4,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	NextServer           string    `protobuf:"bytes,5,opt,name=nextServer,proto3" json:"nextServer,omitempty"`
	Options              []*Option `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty"`
	BootFileName         string    `protobuf:"bytes,7,opt,name=bootFileName,proto3" json:"bootFileName,omitempty"`
	ServerHostname       string    `protobuf:"bytes,8,opt,name=serverHostname,proto3" json:"serverHostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateSubnetv6ReservationReq) Reset()         { *m = UpdateSubnetv6ReservationReq{} }
func (m *UpdateSubnetv6ReservationReq) String() string { return proto.CompactTextString(m) }
func (*UpdateSubnetv6ReservationReq) ProtoMessage()    {}
func (*UpdateSubnetv6ReservationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{24}
}

func (m *UpdateSubnetv6ReservationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubnetv6ReservationReq.Unmarshal(m, b)
}
func (m *UpdateSubnetv6ReservationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubnetv6ReservationReq.Marshal(b, m, deterministic)
}
func (m *UpdateSubnetv6ReservationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubnetv6ReservationReq.Merge(m, src)
}
func (m *UpdateSubnetv6ReservationReq) XXX_Size() int {
	return xxx_messageInfo_UpdateSubnetv6ReservationReq.Size(m)
}
func (m *UpdateSubnetv6ReservationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubnetv6ReservationReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubnetv6ReservationReq proto.InternalMessageInfo

func (m *UpdateSubnetv6ReservationReq) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *UpdateSubnetv6ReservationReq) GetDuid() string {
	if m != nil {
		return m.Duid
	}
	return ""
}

func (m *UpdateSubnetv6ReservationReq) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *UpdateSubnetv6ReservationReq) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *UpdateSubnetv6ReservationReq) GetNextServer() string {
	if m != nil {
		return m.NextServer
	}
	return ""
}

func (m *UpdateSubnetv6ReservationReq) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *UpdateSubnetv6ReservationReq) GetBootFileName() string {
	if m != nil {
		return m.BootFileName
	}
	return ""
}

func (m *UpdateSubnetv6ReservationReq) GetServerHostname() string {
	if m != nil {
		return m.ServerHostname
	}
	return ""
}

type DeleteSubnetv6ReservationReq struct {
	Subnet               string   `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	Duid                 string   `protobuf:"bytes,2,opt,name=duid,proto3" json:"duid,omitempty"`
	IpAddr               string   `protobuf:"bytes,3,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	ServerHostname       string   `protobuf:"bytes,4,opt,name=serverHostname,proto3" json:"serverHostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubnetv6ReservationReq) Reset()         { *m = DeleteSubnetv6ReservationReq{} }
func (m *DeleteSubnetv6ReservationReq) String() string { return proto.CompactTextString(m) }
func (*DeleteSubnetv6ReservationReq) ProtoMessage()    {}
func (*DeleteSubnetv6ReservationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{25}
}

func (m *DeleteSubnetv6ReservationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubnetv6ReservationReq.Unmarshal(m, b)
}
func (m *DeleteSubnetv6ReservationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubnetv6ReservationReq.Marshal(b, m, deterministic)
}
func (m *DeleteSubnetv6ReservationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubnetv6ReservationReq.Merge(m, src)
}
func (m *DeleteSubnetv6ReservationReq) XXX_Size() int {
	return xxx_messageInfo_DeleteSubnetv6ReservationReq.Size(m)
}
func (m *DeleteSubnetv6ReservationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubnetv6ReservationReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubnetv6ReservationReq proto.InternalMessageInfo

func (m *DeleteSubnetv6ReservationReq) GetSubnet() string {
	if m != nil {
		return m.Subnet
	}
	return ""
}

func (m *DeleteSubnetv6ReservationReq) GetDuid() string {
	if m != nil {
		return m.Duid
	}
	return ""
}

func (m *DeleteSubnetv6ReservationReq) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *DeleteSubnetv6ReservationReq) GetServerHostname() string {
	if m != nil {
		return m.ServerHostname
	}
	return ""
}

type GetLeasesReq struct {
	Subnetid             string   `protobuf:"bytes,1,opt,name=subnetid,proto3" json:"subnetid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeasesReq) Reset()         { *m = GetLeasesReq{} }
func (m *GetLeasesReq) String() string { return proto.CompactTextString(m) }
func (*GetLeasesReq) ProtoMessage()    {}
func (*GetLeasesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{26}
}

func (m *GetLeasesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeasesReq.Unmarshal(m, b)
}
func (m *GetLeasesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeasesReq.Marshal(b, m, deterministic)
}
func (m *GetLeasesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeasesReq.Merge(m, src)
}
func (m *GetLeasesReq) XXX_Size() int {
	return xxx_messageInfo_GetLeasesReq.Size(m)
}
func (m *GetLeasesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeasesReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeasesReq proto.InternalMessageInfo

func (m *GetLeasesReq) GetSubnetid() string {
	if m != nil {
		return m.Subnetid
	}
	return ""
}

type Lease struct {
	IpAddress            string   `protobuf:"bytes,1,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	HwAddress            []byte   `protobuf:"bytes,2,opt,name=hwAddress,proto3" json:"hwAddress,omitempty"`
	ValidLifetime        int32    `protobuf:"varint,3,opt,name=validLifetime,proto3" json:"validLifetime,omitempty"`
	Expire               int64    `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Lease) Reset()         { *m = Lease{} }
func (m *Lease) String() string { return proto.CompactTextString(m) }
func (*Lease) ProtoMessage()    {}
func (*Lease) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{27}
}

func (m *Lease) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lease.Unmarshal(m, b)
}
func (m *Lease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lease.Marshal(b, m, deterministic)
}
func (m *Lease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lease.Merge(m, src)
}
func (m *Lease) XXX_Size() int {
	return xxx_messageInfo_Lease.Size(m)
}
func (m *Lease) XXX_DiscardUnknown() {
	xxx_messageInfo_Lease.DiscardUnknown(m)
}

var xxx_messageInfo_Lease proto.InternalMessageInfo

func (m *Lease) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *Lease) GetHwAddress() []byte {
	if m != nil {
		return m.HwAddress
	}
	return nil
}

func (m *Lease) GetValidLifetime() int32 {
	if m != nil {
		return m.ValidLifetime
	}
	return 0
}

func (m *Lease) GetExpire() int64 {
	if m != nil {
		return m.Expire
	}
	return 0
}

type GetLeasesResp struct {
	Leases               []*Lease `protobuf:"bytes,1,rep,name=leases,proto3" json:"leases,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLeasesResp) Reset()         { *m = GetLeasesResp{} }
func (m *GetLeasesResp) String() string { return proto.CompactTextString(m) }
func (*GetLeasesResp) ProtoMessage()    {}
func (*GetLeasesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b4c6fed4d91e328, []int{28}
}

func (m *GetLeasesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeasesResp.Unmarshal(m, b)
}
func (m *GetLeasesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeasesResp.Marshal(b, m, deterministic)
}
func (m *GetLeasesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeasesResp.Merge(m, src)
}
func (m *GetLeasesResp) XXX_Size() int {
	return xxx_messageInfo_GetLeasesResp.Size(m)
}
func (m *GetLeasesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeasesResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeasesResp proto.InternalMessageInfo

func (m *GetLeasesResp) GetLeases() []*Lease {
	if m != nil {
		return m.Leases
	}
	return nil
}

func init() {
	proto.RegisterType((*Option)(nil), "pb.Option")
	proto.RegisterType((*Reservation)(nil), "pb.Reservation")
	proto.RegisterType((*Pools)(nil), "pb.Pools")
	proto.RegisterType((*Poolv6S)(nil), "pb.Poolv6s")
	proto.RegisterType((*StartDHCPv4Req)(nil), "pb.startDHCPv4Req")
	proto.RegisterType((*StopDHCPv4Req)(nil), "pb.stopDHCPv4Req")
	proto.RegisterType((*CreateSubnetv4Req)(nil), "pb.CreateSubnetv4Req")
	proto.RegisterType((*UpdateSubnetv4Req)(nil), "pb.UpdateSubnetv4Req")
	proto.RegisterType((*DeleteSubnetv4Req)(nil), "pb.DeleteSubnetv4Req")
	proto.RegisterType((*CreateSubnetv4PoolReq)(nil), "pb.CreateSubnetv4PoolReq")
	proto.RegisterType((*UpdateSubnetv4PoolReq)(nil), "pb.UpdateSubnetv4PoolReq")
	proto.RegisterType((*DeleteSubnetv4PoolReq)(nil), "pb.DeleteSubnetv4PoolReq")
	proto.RegisterType((*CreateSubnetv4ReservationReq)(nil), "pb.CreateSubnetv4ReservationReq")
	proto.RegisterType((*UpdateSubnetv4ReservationReq)(nil), "pb.UpdateSubnetv4ReservationReq")
	proto.RegisterType((*DeleteSubnetv4ReservationReq)(nil), "pb.DeleteSubnetv4ReservationReq")
	proto.RegisterType((*StartDHCPv6Req)(nil), "pb.startDHCPv6Req")
	proto.RegisterType((*StopDHCPv6Req)(nil), "pb.stopDHCPv6Req")
	proto.RegisterType((*CreateSubnetv6Req)(nil), "pb.CreateSubnetv6Req")
	proto.RegisterType((*UpdateSubnetv6Req)(nil), "pb.UpdateSubnetv6Req")
	proto.RegisterType((*DeleteSubnetv6Req)(nil), "pb.DeleteSubnetv6Req")
	proto.RegisterType((*CreateSubnetv6PoolReq)(nil), "pb.CreateSubnetv6PoolReq")
	proto.RegisterType((*UpdateSubnetv6PoolReq)(nil), "pb.UpdateSubnetv6PoolReq")
	proto.RegisterType((*DeleteSubnetv6PoolReq)(nil), "pb.DeleteSubnetv6PoolReq")
	proto.RegisterType((*CreateSubnetv6ReservationReq)(nil), "pb.CreateSubnetv6ReservationReq")
	proto.RegisterType((*UpdateSubnetv6ReservationReq)(nil), "pb.UpdateSubnetv6ReservationReq")
	proto.RegisterType((*DeleteSubnetv6ReservationReq)(nil), "pb.DeleteSubnetv6ReservationReq")
	proto.RegisterType((*GetLeasesReq)(nil), "pb.GetLeasesReq")
	proto.RegisterType((*Lease)(nil), "pb.Lease")
	proto.RegisterType((*GetLeasesResp)(nil), "pb.GetLeasesResp")
}

func init() { proto.RegisterFile("dhcp.proto", fileDescriptor_0b4c6fed4d91e328) }

var fileDescriptor_0b4c6fed4d91e328 = []byte{
	// 1200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0x5f, 0x6b, 0xe3, 0x46,
	0x10, 0x3f, 0xc9, 0xb6, 0x6c, 0x4f, 0xfe, 0xdc, 0x65, 0x69, 0x82, 0xce, 0xa4, 0xc5, 0x15, 0x47,
	0x1b, 0xee, 0x21, 0xd0, 0xe4, 0x58, 0x28, 0x7d, 0x3a, 0x12, 0xae, 0x77, 0x70, 0xed, 0x05, 0x99,
	0xf6, 0x5d, 0xb6, 0x36, 0x89, 0x40, 0x91, 0x54, 0xad, 0xec, 0xe4, 0x1e, 0xfb, 0xda, 0x42, 0x29,
	0x1c, 0x85, 0x7b, 0xe9, 0x37, 0xe8, 0x87, 0xe8, 0xf7, 0xe8, 0x6b, 0x0f, 0xfa, 0x31, 0xca, 0xfe,
	0x91, 0xad, 0x95, 0x56, 0xb6, 0x92, 0x16, 0x5a, 0xdc, 0xbe, 0x69, 0x66, 0x67, 0xc7, 0x33, 0xbf,
	0xdd, 0xdf, 0xce, 0xec, 0x1a, 0xc0, 0xbf, 0x9c, 0x24, 0x87, 0x49, 0x1a, 0x67, 0x31, 0x32, 0x93,
	0xf1, 0x00, 0xa6, 0x59, 0x10, 0x0a, 0xd9, 0x79, 0x6b, 0x80, 0xf5, 0x2a, 0xc9, 0x82, 0x38, 0x42,
	0x1f, 0x00, 0x78, 0xe1, 0xb5, 0xf7, 0x9a, 0x8e, 0x48, 0xe4, 0xdb, 0xc6, 0xd0, 0x38, 0xe8, 0xb9,
	0x05, 0x0d, 0x42, 0xd0, 0x9e, 0xc4, 0x3e, 0xb1, 0xcd, 0xa1, 0x71, 0xd0, 0x76, 0xf9, 0x37, 0xda,
	0x87, 0xfe, 0x84, 0xce, 0x9e, 0xc5, 0xe9, 0x95, 0x97, 0xd9, 0x2d, 0x3e, 0x65, 0xa1, 0x60, 0x33,
	0x7c, 0x2f, 0xf3, 0xec, 0xf6, 0xd0, 0x38, 0xe8, 0xbb, 0xfc, 0x9b, 0xe9, 0x22, 0xef, 0x8a, 0xd8,
	0x1d, 0xa1, 0x63, 0xdf, 0xe8, 0x3d, 0xe8, 0xd0, 0xc4, 0x9b, 0x10, 0xdb, 0xe2, 0x4a, 0x21, 0x38,
	0xef, 0x4c, 0xd8, 0x70, 0x09, 0x25, 0xe9, 0xcc, 0xe3, 0xf1, 0x0d, 0xa0, 0x97, 0xa4, 0xe4, 0x3c,
	0xb8, 0x21, 0x94, 0x47, 0xd7, 0x77, 0xe7, 0x32, 0x1b, 0xbb, 0x8c, 0x69, 0xc6, 0x3d, 0x9b, 0x62,
	0x2c, 0x97, 0x79, 0x14, 0xd3, 0xc0, 0xe7, 0xe1, 0xb1, 0x28, 0xa6, 0x81, 0x8f, 0x86, 0xb0, 0x11,
	0x24, 0x4f, 0x7d, 0x3f, 0x25, 0x94, 0x12, 0x2a, 0x03, 0x2c, 0xaa, 0x18, 0x1a, 0x11, 0xb9, 0xc9,
	0x46, 0x24, 0x9d, 0x91, 0x54, 0x46, 0x5b, 0xd0, 0xa0, 0x47, 0xd0, 0x8d, 0x93, 0xec, 0x94, 0xa5,
	0x67, 0x0d, 0x5b, 0x07, 0x1b, 0x47, 0x70, 0x98, 0x8c, 0x0f, 0x05, 0x94, 0x6e, 0x3e, 0xc4, 0xf0,
	0xb9, 0xbc, 0x96, 0x4e, 0xed, 0x2e, 0x77, 0xb2, 0x50, 0x70, 0xf4, 0x82, 0x74, 0x32, 0x0d, 0xb2,
	0x17, 0xbe, 0xdd, 0x13, 0xa3, 0x73, 0x05, 0xcb, 0x69, 0x12, 0x06, 0x24, 0x62, 0x83, 0x7d, 0x91,
	0x53, 0x2e, 0xa3, 0x8f, 0x60, 0x9b, 0xf2, 0x38, 0x9e, 0xe7, 0x59, 0x03, 0xb7, 0x28, 0x69, 0x91,
	0x03, 0x9b, 0xe3, 0x38, 0xce, 0x9e, 0x05, 0x21, 0xf9, 0x92, 0x59, 0x6d, 0x70, 0x2b, 0x45, 0xe7,
	0xbc, 0x31, 0xa0, 0x73, 0x16, 0xc7, 0x21, 0x95, 0x39, 0x05, 0x71, 0xc4, 0x00, 0xd6, 0xe5, 0xc4,
	0x86, 0x18, 0x9e, 0x49, 0x1c, 0x87, 0x12, 0x67, 0xfe, 0x8d, 0x1e, 0xc1, 0xd6, 0xcc, 0x0b, 0x03,
	0xff, 0x65, 0x70, 0x4e, 0xb2, 0xe0, 0x8a, 0x48, 0xb0, 0x55, 0x25, 0x7a, 0x0c, 0x0f, 0xae, 0xbc,
	0x9b, 0xaf, 0x15, 0x43, 0x01, 0x7d, 0x45, 0xef, 0xfc, 0x64, 0x40, 0x97, 0x45, 0x35, 0xc3, 0xff,
	0xae, 0xb8, 0x0e, 0x60, 0x9b, 0x66, 0x5e, 0x9a, 0x9d, 0x3e, 0x3f, 0x39, 0x9b, 0x3d, 0x71, 0xc9,
	0x37, 0x68, 0x0f, 0xac, 0x49, 0x1c, 0x9d, 0x07, 0x17, 0x72, 0x57, 0x4a, 0xc9, 0xf9, 0x18, 0xb6,
	0x68, 0x16, 0x27, 0xab, 0x0d, 0xdf, 0x98, 0xb0, 0x73, 0x92, 0x12, 0x2f, 0x23, 0xa3, 0xe9, 0x38,
	0x22, 0x99, 0xb0, 0xde, 0x06, 0x33, 0xf0, 0xa5, 0xa5, 0x19, 0xf8, 0x6c, 0x36, 0xe5, 0xc3, 0x32,
	0x41, 0x29, 0x15, 0xc1, 0x69, 0xd5, 0x83, 0x73, 0x0c, 0x9b, 0xe9, 0x82, 0x4b, 0x6c, 0xc7, 0x33,
	0xd3, 0xfb, 0xcc, 0xb4, 0xc0, 0x31, 0x57, 0x31, 0xaa, 0xa2, 0xd7, 0xd1, 0xa1, 0xf7, 0xbe, 0xc4,
	0x5d, 0xd0, 0xa0, 0xcf, 0x5c, 0xf2, 0xed, 0x24, 0x97, 0xc0, 0x86, 0xee, 0x85, 0x97, 0x91, 0x6b,
	0xef, 0xb5, 0x24, 0x40, 0x2e, 0xb2, 0xed, 0xef, 0x47, 0x54, 0x32, 0x4c, 0x6e, 0xff, 0xb9, 0x82,
	0xa3, 0xf2, 0x55, 0xe2, 0xff, 0x8f, 0x8a, 0x82, 0xca, 0x67, 0xb0, 0x73, 0x4a, 0x42, 0xa2, 0x82,
	0xb2, 0x00, 0xc1, 0x50, 0x40, 0x10, 0x60, 0x99, 0x39, 0x58, 0xce, 0x0f, 0x26, 0xec, 0xaa, 0x1b,
	0x8d, 0x85, 0xf4, 0xf7, 0xc3, 0x9a, 0xe7, 0xde, 0xd6, 0xe7, 0xde, 0x0c, 0x40, 0x1d, 0x29, 0x2d,
	0x3d, 0x29, 0xef, 0x8c, 0xe6, 0xcf, 0x26, 0xec, 0xaa, 0x7b, 0xac, 0x0e, 0x90, 0x42, 0xe2, 0xe6,
	0xea, 0x23, 0xa8, 0x55, 0x38, 0x82, 0x16, 0x50, 0xb6, 0x15, 0x28, 0x6d, 0xe8, 0xc6, 0xa1, 0xcf,
	0xcd, 0x45, 0xfe, 0xb9, 0x58, 0xc5, 0xc7, 0x6a, 0x8a, 0x4f, 0x77, 0x35, 0x3e, 0xfd, 0x25, 0xf8,
	0x40, 0x19, 0x9f, 0x13, 0xd8, 0x55, 0x77, 0x5b, 0x0e, 0x4f, 0xdd, 0x8e, 0xd3, 0x9c, 0xc1, 0xce,
	0xaf, 0x26, 0xec, 0x97, 0x8f, 0xb7, 0x05, 0xb7, 0x96, 0x3b, 0xe3, 0x85, 0xdb, 0x2c, 0x14, 0xee,
	0x62, 0xa1, 0x6f, 0x95, 0x0a, 0xfd, 0x1e, 0x58, 0xa2, 0x82, 0xe7, 0x48, 0x0b, 0xa9, 0x61, 0x29,
	0xe7, 0x6b, 0x6b, 0xd5, 0xaf, 0x6d, 0xb9, 0x94, 0x76, 0xab, 0xa5, 0xf4, 0x2f, 0x14, 0x74, 0xa5,
	0x51, 0x80, 0x52, 0xa3, 0xe0, 0xfc, 0x62, 0xc2, 0x7e, 0xf9, 0x2c, 0x5c, 0x53, 0x08, 0xab, 0x9d,
	0x4d, 0x4f, 0xdb, 0xd9, 0x0c, 0xa0, 0x17, 0x87, 0xbe, 0x4b, 0x67, 0x2f, 0xce, 0x72, 0x30, 0x73,
	0xd9, 0xf9, 0xce, 0x80, 0xfd, 0xf2, 0x29, 0x79, 0x67, 0xb8, 0x16, 0x90, 0xb4, 0x14, 0x48, 0xaa,
	0x81, 0xb6, 0x75, 0x81, 0xaa, 0x0d, 0x03, 0x5e, 0xd6, 0x07, 0xdc, 0x2f, 0x34, 0x0c, 0xcc, 0xd0,
	0xf9, 0xcd, 0x28, 0x35, 0x06, 0x78, 0x8d, 0x4a, 0x20, 0xcf, 0x4e, 0xd9, 0xd4, 0x6b, 0x95, 0x5d,
	0xb9, 0x50, 0xe3, 0xdb, 0x14, 0xea, 0xef, 0xcb, 0x85, 0x1a, 0xaf, 0x49, 0xa1, 0x2e, 0xaf, 0x47,
	0xb7, 0xc1, 0x7a, 0x38, 0xef, 0x8c, 0x52, 0x95, 0xc6, 0x6b, 0x59, 0xa5, 0x2b, 0xd5, 0x16, 0xdf,
	0xa5, 0xda, 0xfe, 0x61, 0x94, 0xaa, 0x2d, 0x5e, 0xd7, 0x52, 0xe1, 0xfc, 0x58, 0xae, 0x8a, 0xf8,
	0xbf, 0x5e, 0x15, 0xab, 0x95, 0x0f, 0xff, 0x83, 0x95, 0xef, 0x31, 0x6c, 0x7e, 0x4e, 0xb2, 0x97,
	0xc4, 0xa3, 0x84, 0xb2, 0xdf, 0x1e, 0x40, 0x4f, 0xfc, 0xda, 0x9c, 0xb3, 0x73, 0xd9, 0xf9, 0xd6,
	0x80, 0x0e, 0xb7, 0x64, 0x9d, 0xd0, 0xfc, 0x1d, 0x46, 0x9a, 0x2d, 0x14, 0x6a, 0x9f, 0xc4, 0x82,
	0xdd, 0x2c, 0x3e, 0xa8, 0x68, 0xaf, 0xfb, 0x9d, 0x32, 0x27, 0xf7, 0xc0, 0x22, 0x37, 0x49, 0x90,
	0x8a, 0xb8, 0x5b, 0xae, 0x94, 0x9c, 0x23, 0xd8, 0x2a, 0xc4, 0x4b, 0x13, 0xf4, 0x21, 0x58, 0x21,
	0x97, 0xe4, 0xb3, 0x03, 0x3f, 0x20, 0xf9, 0xb8, 0x2b, 0x07, 0x8e, 0xde, 0x5a, 0xb0, 0x75, 0x7a,
	0x39, 0x49, 0x66, 0x4f, 0xbe, 0xf0, 0x22, 0xef, 0x82, 0xa4, 0xe8, 0x18, 0x36, 0x46, 0x8b, 0x07,
	0x02, 0x84, 0xd8, 0x1c, 0xf5, 0xc5, 0x60, 0xb0, 0x2d, 0xb6, 0x01, 0x49, 0x5d, 0x42, 0xa7, 0x61,
	0xe6, 0xdc, 0x43, 0x9f, 0x00, 0x8c, 0xe6, 0x6f, 0x05, 0x68, 0x47, 0xcc, 0x29, 0xbc, 0x1d, 0x68,
	0xa6, 0x7c, 0x0a, 0xdb, 0x6a, 0x57, 0x8d, 0x76, 0x99, 0x4d, 0xe5, 0x21, 0x41, 0x3f, 0x55, 0xed,
	0x26, 0xc5, 0xd4, 0xca, 0x6d, 0x5b, 0x3f, 0x55, 0xed, 0xac, 0xc4, 0xd4, 0xca, 0x9d, 0x54, 0x33,
	0xf5, 0x29, 0xa0, 0xea, 0xe5, 0x13, 0x3d, 0xac, 0x06, 0x2d, 0x8f, 0x3d, 0xbd, 0x8b, 0xea, 0x75,
	0x4d, 0xb8, 0xd0, 0x5e, 0xe3, 0xf4, 0x2e, 0xaa, 0x57, 0x1a, 0xe1, 0x42, 0x7b, 0xd5, 0xd1, 0xb8,
	0x78, 0x05, 0x0f, 0x6b, 0xef, 0x33, 0x68, 0xa8, 0x5b, 0x84, 0x22, 0x05, 0xf5, 0x0e, 0x6b, 0xbb,
	0x7b, 0xe1, 0x70, 0x59, 0xf3, 0xaf, 0x77, 0x58, 0xdb, 0xff, 0x0a, 0x87, 0xcb, 0xda, 0x63, 0x8d,
	0xc3, 0x23, 0xe8, 0xcf, 0xa9, 0x81, 0x1e, 0xb0, 0xe1, 0x22, 0xb3, 0x07, 0x3b, 0x25, 0x0d, 0x4d,
	0x9c, 0x7b, 0x47, 0xbf, 0x77, 0x24, 0x35, 0xb0, 0x96, 0x1a, 0xb8, 0x4c, 0x0d, 0xbc, 0x9a, 0x1a,
	0xb8, 0x44, 0x0d, 0xdc, 0x8c, 0x1a, 0x58, 0x43, 0x0d, 0xdc, 0x8c, 0x1a, 0x58, 0x43, 0x0d, 0xdc,
	0x8c, 0x1a, 0x58, 0x43, 0x0d, 0xdc, 0x8c, 0x1a, 0xb8, 0x86, 0x1a, 0xb8, 0x39, 0x35, 0x70, 0x0d,
	0x35, 0x70, 0x73, 0x6a, 0xe0, 0x1a, 0x6a, 0xe0, 0xe6, 0xd4, 0xc0, 0xcb, 0xa9, 0x81, 0x6f, 0x4d,
	0x0d, 0xbc, 0x9c, 0x1a, 0xf8, 0xd6, 0xd4, 0xc0, 0xcb, 0xa9, 0xb1, 0xd2, 0xe1, 0xd8, 0xe2, 0x7f,
	0xa4, 0x1c, 0xff, 0x19, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x22, 0xf6, 0x5b, 0x66, 0x19, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Dhcpv4ManagerClient is the client API for Dhcpv4Manager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Dhcpv4ManagerClient interface {
	StartDHCPv4(ctx context.Context, in *StartDHCPv4Req, opts ...grpc.CallOption) (*OperResult, error)
	StopDHCPv4(ctx context.Context, in *StopDHCPv4Req, opts ...grpc.CallOption) (*OperResult, error)
	CreateSubnetv4(ctx context.Context, in *CreateSubnetv4Req, opts ...grpc.CallOption) (*OperResult, error)
	UpdateSubnetv4(ctx context.Context, in *UpdateSubnetv4Req, opts ...grpc.CallOption) (*OperResult, error)
	DeleteSubnetv4(ctx context.Context, in *DeleteSubnetv4Req, opts ...grpc.CallOption) (*OperResult, error)
	CreateSubnetv4Pool(ctx context.Context, in *CreateSubnetv4PoolReq, opts ...grpc.CallOption) (*OperResult, error)
	UpdateSubnetv4Pool(ctx context.Context, in *UpdateSubnetv4PoolReq, opts ...grpc.CallOption) (*OperResult, error)
	DeleteSubnetv4Pool(ctx context.Context, in *DeleteSubnetv4PoolReq, opts ...grpc.CallOption) (*OperResult, error)
	CreateSubnetv4Reservation(ctx context.Context, in *CreateSubnetv4ReservationReq, opts ...grpc.CallOption) (*OperResult, error)
	UpdateSubnetv4Reservation(ctx context.Context, in *UpdateSubnetv4ReservationReq, opts ...grpc.CallOption) (*OperResult, error)
	DeleteSubnetv4Reservation(ctx context.Context, in *DeleteSubnetv4ReservationReq, opts ...grpc.CallOption) (*OperResult, error)
	GetLeases(ctx context.Context, in *GetLeasesReq, opts ...grpc.CallOption) (*GetLeasesResp, error)
}

type dhcpv4ManagerClient struct {
	cc *grpc.ClientConn
}

func NewDhcpv4ManagerClient(cc *grpc.ClientConn) Dhcpv4ManagerClient {
	return &dhcpv4ManagerClient{cc}
}

func (c *dhcpv4ManagerClient) StartDHCPv4(ctx context.Context, in *StartDHCPv4Req, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv4Manager/StartDHCPv4", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv4ManagerClient) StopDHCPv4(ctx context.Context, in *StopDHCPv4Req, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv4Manager/StopDHCPv4", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv4ManagerClient) CreateSubnetv4(ctx context.Context, in *CreateSubnetv4Req, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv4Manager/CreateSubnetv4", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv4ManagerClient) UpdateSubnetv4(ctx context.Context, in *UpdateSubnetv4Req, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv4Manager/UpdateSubnetv4", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv4ManagerClient) DeleteSubnetv4(ctx context.Context, in *DeleteSubnetv4Req, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv4Manager/DeleteSubnetv4", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv4ManagerClient) CreateSubnetv4Pool(ctx context.Context, in *CreateSubnetv4PoolReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv4Manager/CreateSubnetv4Pool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv4ManagerClient) UpdateSubnetv4Pool(ctx context.Context, in *UpdateSubnetv4PoolReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv4Manager/UpdateSubnetv4Pool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv4ManagerClient) DeleteSubnetv4Pool(ctx context.Context, in *DeleteSubnetv4PoolReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv4Manager/DeleteSubnetv4Pool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv4ManagerClient) CreateSubnetv4Reservation(ctx context.Context, in *CreateSubnetv4ReservationReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv4Manager/CreateSubnetv4Reservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv4ManagerClient) UpdateSubnetv4Reservation(ctx context.Context, in *UpdateSubnetv4ReservationReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv4Manager/UpdateSubnetv4Reservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv4ManagerClient) DeleteSubnetv4Reservation(ctx context.Context, in *DeleteSubnetv4ReservationReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv4Manager/DeleteSubnetv4Reservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv4ManagerClient) GetLeases(ctx context.Context, in *GetLeasesReq, opts ...grpc.CallOption) (*GetLeasesResp, error) {
	out := new(GetLeasesResp)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv4Manager/GetLeases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Dhcpv4ManagerServer is the server API for Dhcpv4Manager service.
type Dhcpv4ManagerServer interface {
	StartDHCPv4(context.Context, *StartDHCPv4Req) (*OperResult, error)
	StopDHCPv4(context.Context, *StopDHCPv4Req) (*OperResult, error)
	CreateSubnetv4(context.Context, *CreateSubnetv4Req) (*OperResult, error)
	UpdateSubnetv4(context.Context, *UpdateSubnetv4Req) (*OperResult, error)
	DeleteSubnetv4(context.Context, *DeleteSubnetv4Req) (*OperResult, error)
	CreateSubnetv4Pool(context.Context, *CreateSubnetv4PoolReq) (*OperResult, error)
	UpdateSubnetv4Pool(context.Context, *UpdateSubnetv4PoolReq) (*OperResult, error)
	DeleteSubnetv4Pool(context.Context, *DeleteSubnetv4PoolReq) (*OperResult, error)
	CreateSubnetv4Reservation(context.Context, *CreateSubnetv4ReservationReq) (*OperResult, error)
	UpdateSubnetv4Reservation(context.Context, *UpdateSubnetv4ReservationReq) (*OperResult, error)
	DeleteSubnetv4Reservation(context.Context, *DeleteSubnetv4ReservationReq) (*OperResult, error)
	GetLeases(context.Context, *GetLeasesReq) (*GetLeasesResp, error)
}

// UnimplementedDhcpv4ManagerServer can be embedded to have forward compatible implementations.
type UnimplementedDhcpv4ManagerServer struct {
}

func (*UnimplementedDhcpv4ManagerServer) StartDHCPv4(ctx context.Context, req *StartDHCPv4Req) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartDHCPv4 not implemented")
}
func (*UnimplementedDhcpv4ManagerServer) StopDHCPv4(ctx context.Context, req *StopDHCPv4Req) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopDHCPv4 not implemented")
}
func (*UnimplementedDhcpv4ManagerServer) CreateSubnetv4(ctx context.Context, req *CreateSubnetv4Req) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubnetv4 not implemented")
}
func (*UnimplementedDhcpv4ManagerServer) UpdateSubnetv4(ctx context.Context, req *UpdateSubnetv4Req) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSubnetv4 not implemented")
}
func (*UnimplementedDhcpv4ManagerServer) DeleteSubnetv4(ctx context.Context, req *DeleteSubnetv4Req) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSubnetv4 not implemented")
}
func (*UnimplementedDhcpv4ManagerServer) CreateSubnetv4Pool(ctx context.Context, req *CreateSubnetv4PoolReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubnetv4Pool not implemented")
}
func (*UnimplementedDhcpv4ManagerServer) UpdateSubnetv4Pool(ctx context.Context, req *UpdateSubnetv4PoolReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSubnetv4Pool not implemented")
}
func (*UnimplementedDhcpv4ManagerServer) DeleteSubnetv4Pool(ctx context.Context, req *DeleteSubnetv4PoolReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSubnetv4Pool not implemented")
}
func (*UnimplementedDhcpv4ManagerServer) CreateSubnetv4Reservation(ctx context.Context, req *CreateSubnetv4ReservationReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubnetv4Reservation not implemented")
}
func (*UnimplementedDhcpv4ManagerServer) UpdateSubnetv4Reservation(ctx context.Context, req *UpdateSubnetv4ReservationReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSubnetv4Reservation not implemented")
}
func (*UnimplementedDhcpv4ManagerServer) DeleteSubnetv4Reservation(ctx context.Context, req *DeleteSubnetv4ReservationReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSubnetv4Reservation not implemented")
}
func (*UnimplementedDhcpv4ManagerServer) GetLeases(ctx context.Context, req *GetLeasesReq) (*GetLeasesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLeases not implemented")
}

func RegisterDhcpv4ManagerServer(s *grpc.Server, srv Dhcpv4ManagerServer) {
	s.RegisterService(&_Dhcpv4Manager_serviceDesc, srv)
}

func _Dhcpv4Manager_StartDHCPv4_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartDHCPv4Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv4ManagerServer).StartDHCPv4(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv4Manager/StartDHCPv4",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv4ManagerServer).StartDHCPv4(ctx, req.(*StartDHCPv4Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv4Manager_StopDHCPv4_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopDHCPv4Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv4ManagerServer).StopDHCPv4(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv4Manager/StopDHCPv4",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv4ManagerServer).StopDHCPv4(ctx, req.(*StopDHCPv4Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv4Manager_CreateSubnetv4_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubnetv4Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv4ManagerServer).CreateSubnetv4(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv4Manager/CreateSubnetv4",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv4ManagerServer).CreateSubnetv4(ctx, req.(*CreateSubnetv4Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv4Manager_UpdateSubnetv4_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSubnetv4Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv4ManagerServer).UpdateSubnetv4(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv4Manager/UpdateSubnetv4",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv4ManagerServer).UpdateSubnetv4(ctx, req.(*UpdateSubnetv4Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv4Manager_DeleteSubnetv4_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSubnetv4Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv4ManagerServer).DeleteSubnetv4(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv4Manager/DeleteSubnetv4",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv4ManagerServer).DeleteSubnetv4(ctx, req.(*DeleteSubnetv4Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv4Manager_CreateSubnetv4Pool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubnetv4PoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv4ManagerServer).CreateSubnetv4Pool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv4Manager/CreateSubnetv4Pool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv4ManagerServer).CreateSubnetv4Pool(ctx, req.(*CreateSubnetv4PoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv4Manager_UpdateSubnetv4Pool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSubnetv4PoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv4ManagerServer).UpdateSubnetv4Pool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv4Manager/UpdateSubnetv4Pool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv4ManagerServer).UpdateSubnetv4Pool(ctx, req.(*UpdateSubnetv4PoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv4Manager_DeleteSubnetv4Pool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSubnetv4PoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv4ManagerServer).DeleteSubnetv4Pool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv4Manager/DeleteSubnetv4Pool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv4ManagerServer).DeleteSubnetv4Pool(ctx, req.(*DeleteSubnetv4PoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv4Manager_CreateSubnetv4Reservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubnetv4ReservationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv4ManagerServer).CreateSubnetv4Reservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv4Manager/CreateSubnetv4Reservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv4ManagerServer).CreateSubnetv4Reservation(ctx, req.(*CreateSubnetv4ReservationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv4Manager_UpdateSubnetv4Reservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSubnetv4ReservationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv4ManagerServer).UpdateSubnetv4Reservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv4Manager/UpdateSubnetv4Reservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv4ManagerServer).UpdateSubnetv4Reservation(ctx, req.(*UpdateSubnetv4ReservationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv4Manager_DeleteSubnetv4Reservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSubnetv4ReservationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv4ManagerServer).DeleteSubnetv4Reservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv4Manager/DeleteSubnetv4Reservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv4ManagerServer).DeleteSubnetv4Reservation(ctx, req.(*DeleteSubnetv4ReservationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv4Manager_GetLeases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLeasesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv4ManagerServer).GetLeases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv4Manager/GetLeases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv4ManagerServer).GetLeases(ctx, req.(*GetLeasesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dhcpv4Manager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Dhcpv4Manager",
	HandlerType: (*Dhcpv4ManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartDHCPv4",
			Handler:    _Dhcpv4Manager_StartDHCPv4_Handler,
		},
		{
			MethodName: "StopDHCPv4",
			Handler:    _Dhcpv4Manager_StopDHCPv4_Handler,
		},
		{
			MethodName: "CreateSubnetv4",
			Handler:    _Dhcpv4Manager_CreateSubnetv4_Handler,
		},
		{
			MethodName: "UpdateSubnetv4",
			Handler:    _Dhcpv4Manager_UpdateSubnetv4_Handler,
		},
		{
			MethodName: "DeleteSubnetv4",
			Handler:    _Dhcpv4Manager_DeleteSubnetv4_Handler,
		},
		{
			MethodName: "CreateSubnetv4Pool",
			Handler:    _Dhcpv4Manager_CreateSubnetv4Pool_Handler,
		},
		{
			MethodName: "UpdateSubnetv4Pool",
			Handler:    _Dhcpv4Manager_UpdateSubnetv4Pool_Handler,
		},
		{
			MethodName: "DeleteSubnetv4Pool",
			Handler:    _Dhcpv4Manager_DeleteSubnetv4Pool_Handler,
		},
		{
			MethodName: "CreateSubnetv4Reservation",
			Handler:    _Dhcpv4Manager_CreateSubnetv4Reservation_Handler,
		},
		{
			MethodName: "UpdateSubnetv4Reservation",
			Handler:    _Dhcpv4Manager_UpdateSubnetv4Reservation_Handler,
		},
		{
			MethodName: "DeleteSubnetv4Reservation",
			Handler:    _Dhcpv4Manager_DeleteSubnetv4Reservation_Handler,
		},
		{
			MethodName: "GetLeases",
			Handler:    _Dhcpv4Manager_GetLeases_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dhcp.proto",
}

// Dhcpv6ManagerClient is the client API for Dhcpv6Manager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Dhcpv6ManagerClient interface {
	StartDHCPv6(ctx context.Context, in *StartDHCPv6Req, opts ...grpc.CallOption) (*OperResult, error)
	StopDHCPv6(ctx context.Context, in *StopDHCPv6Req, opts ...grpc.CallOption) (*OperResult, error)
	CreateSubnetv6(ctx context.Context, in *CreateSubnetv6Req, opts ...grpc.CallOption) (*OperResult, error)
	UpdateSubnetv6(ctx context.Context, in *UpdateSubnetv6Req, opts ...grpc.CallOption) (*OperResult, error)
	DeleteSubnetv6(ctx context.Context, in *DeleteSubnetv6Req, opts ...grpc.CallOption) (*OperResult, error)
	CreateSubnetv6Pool(ctx context.Context, in *CreateSubnetv6PoolReq, opts ...grpc.CallOption) (*OperResult, error)
	UpdateSubnetv6Pool(ctx context.Context, in *UpdateSubnetv6PoolReq, opts ...grpc.CallOption) (*OperResult, error)
	DeleteSubnetv6Pool(ctx context.Context, in *DeleteSubnetv6PoolReq, opts ...grpc.CallOption) (*OperResult, error)
	CreateSubnetv6Reservation(ctx context.Context, in *CreateSubnetv6ReservationReq, opts ...grpc.CallOption) (*OperResult, error)
	UpdateSubnetv6Reservation(ctx context.Context, in *UpdateSubnetv6ReservationReq, opts ...grpc.CallOption) (*OperResult, error)
	DeleteSubnetv6Reservation(ctx context.Context, in *DeleteSubnetv6ReservationReq, opts ...grpc.CallOption) (*OperResult, error)
}

type dhcpv6ManagerClient struct {
	cc *grpc.ClientConn
}

func NewDhcpv6ManagerClient(cc *grpc.ClientConn) Dhcpv6ManagerClient {
	return &dhcpv6ManagerClient{cc}
}

func (c *dhcpv6ManagerClient) StartDHCPv6(ctx context.Context, in *StartDHCPv6Req, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv6Manager/StartDHCPv6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv6ManagerClient) StopDHCPv6(ctx context.Context, in *StopDHCPv6Req, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv6Manager/StopDHCPv6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv6ManagerClient) CreateSubnetv6(ctx context.Context, in *CreateSubnetv6Req, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv6Manager/CreateSubnetv6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv6ManagerClient) UpdateSubnetv6(ctx context.Context, in *UpdateSubnetv6Req, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv6Manager/UpdateSubnetv6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv6ManagerClient) DeleteSubnetv6(ctx context.Context, in *DeleteSubnetv6Req, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv6Manager/DeleteSubnetv6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv6ManagerClient) CreateSubnetv6Pool(ctx context.Context, in *CreateSubnetv6PoolReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv6Manager/CreateSubnetv6Pool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv6ManagerClient) UpdateSubnetv6Pool(ctx context.Context, in *UpdateSubnetv6PoolReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv6Manager/UpdateSubnetv6Pool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv6ManagerClient) DeleteSubnetv6Pool(ctx context.Context, in *DeleteSubnetv6PoolReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv6Manager/DeleteSubnetv6Pool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv6ManagerClient) CreateSubnetv6Reservation(ctx context.Context, in *CreateSubnetv6ReservationReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv6Manager/CreateSubnetv6Reservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv6ManagerClient) UpdateSubnetv6Reservation(ctx context.Context, in *UpdateSubnetv6ReservationReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv6Manager/UpdateSubnetv6Reservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dhcpv6ManagerClient) DeleteSubnetv6Reservation(ctx context.Context, in *DeleteSubnetv6ReservationReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.Dhcpv6Manager/DeleteSubnetv6Reservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Dhcpv6ManagerServer is the server API for Dhcpv6Manager service.
type Dhcpv6ManagerServer interface {
	StartDHCPv6(context.Context, *StartDHCPv6Req) (*OperResult, error)
	StopDHCPv6(context.Context, *StopDHCPv6Req) (*OperResult, error)
	CreateSubnetv6(context.Context, *CreateSubnetv6Req) (*OperResult, error)
	UpdateSubnetv6(context.Context, *UpdateSubnetv6Req) (*OperResult, error)
	DeleteSubnetv6(context.Context, *DeleteSubnetv6Req) (*OperResult, error)
	CreateSubnetv6Pool(context.Context, *CreateSubnetv6PoolReq) (*OperResult, error)
	UpdateSubnetv6Pool(context.Context, *UpdateSubnetv6PoolReq) (*OperResult, error)
	DeleteSubnetv6Pool(context.Context, *DeleteSubnetv6PoolReq) (*OperResult, error)
	CreateSubnetv6Reservation(context.Context, *CreateSubnetv6ReservationReq) (*OperResult, error)
	UpdateSubnetv6Reservation(context.Context, *UpdateSubnetv6ReservationReq) (*OperResult, error)
	DeleteSubnetv6Reservation(context.Context, *DeleteSubnetv6ReservationReq) (*OperResult, error)
}

// UnimplementedDhcpv6ManagerServer can be embedded to have forward compatible implementations.
type UnimplementedDhcpv6ManagerServer struct {
}

func (*UnimplementedDhcpv6ManagerServer) StartDHCPv6(ctx context.Context, req *StartDHCPv6Req) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartDHCPv6 not implemented")
}
func (*UnimplementedDhcpv6ManagerServer) StopDHCPv6(ctx context.Context, req *StopDHCPv6Req) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopDHCPv6 not implemented")
}
func (*UnimplementedDhcpv6ManagerServer) CreateSubnetv6(ctx context.Context, req *CreateSubnetv6Req) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubnetv6 not implemented")
}
func (*UnimplementedDhcpv6ManagerServer) UpdateSubnetv6(ctx context.Context, req *UpdateSubnetv6Req) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSubnetv6 not implemented")
}
func (*UnimplementedDhcpv6ManagerServer) DeleteSubnetv6(ctx context.Context, req *DeleteSubnetv6Req) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSubnetv6 not implemented")
}
func (*UnimplementedDhcpv6ManagerServer) CreateSubnetv6Pool(ctx context.Context, req *CreateSubnetv6PoolReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubnetv6Pool not implemented")
}
func (*UnimplementedDhcpv6ManagerServer) UpdateSubnetv6Pool(ctx context.Context, req *UpdateSubnetv6PoolReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSubnetv6Pool not implemented")
}
func (*UnimplementedDhcpv6ManagerServer) DeleteSubnetv6Pool(ctx context.Context, req *DeleteSubnetv6PoolReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSubnetv6Pool not implemented")
}
func (*UnimplementedDhcpv6ManagerServer) CreateSubnetv6Reservation(ctx context.Context, req *CreateSubnetv6ReservationReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubnetv6Reservation not implemented")
}
func (*UnimplementedDhcpv6ManagerServer) UpdateSubnetv6Reservation(ctx context.Context, req *UpdateSubnetv6ReservationReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSubnetv6Reservation not implemented")
}
func (*UnimplementedDhcpv6ManagerServer) DeleteSubnetv6Reservation(ctx context.Context, req *DeleteSubnetv6ReservationReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSubnetv6Reservation not implemented")
}

func RegisterDhcpv6ManagerServer(s *grpc.Server, srv Dhcpv6ManagerServer) {
	s.RegisterService(&_Dhcpv6Manager_serviceDesc, srv)
}

func _Dhcpv6Manager_StartDHCPv6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartDHCPv6Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv6ManagerServer).StartDHCPv6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv6Manager/StartDHCPv6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv6ManagerServer).StartDHCPv6(ctx, req.(*StartDHCPv6Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv6Manager_StopDHCPv6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopDHCPv6Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv6ManagerServer).StopDHCPv6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv6Manager/StopDHCPv6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv6ManagerServer).StopDHCPv6(ctx, req.(*StopDHCPv6Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv6Manager_CreateSubnetv6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubnetv6Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv6ManagerServer).CreateSubnetv6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv6Manager/CreateSubnetv6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv6ManagerServer).CreateSubnetv6(ctx, req.(*CreateSubnetv6Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv6Manager_UpdateSubnetv6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSubnetv6Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv6ManagerServer).UpdateSubnetv6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv6Manager/UpdateSubnetv6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv6ManagerServer).UpdateSubnetv6(ctx, req.(*UpdateSubnetv6Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv6Manager_DeleteSubnetv6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSubnetv6Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv6ManagerServer).DeleteSubnetv6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv6Manager/DeleteSubnetv6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv6ManagerServer).DeleteSubnetv6(ctx, req.(*DeleteSubnetv6Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv6Manager_CreateSubnetv6Pool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubnetv6PoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv6ManagerServer).CreateSubnetv6Pool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv6Manager/CreateSubnetv6Pool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv6ManagerServer).CreateSubnetv6Pool(ctx, req.(*CreateSubnetv6PoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv6Manager_UpdateSubnetv6Pool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSubnetv6PoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv6ManagerServer).UpdateSubnetv6Pool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv6Manager/UpdateSubnetv6Pool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv6ManagerServer).UpdateSubnetv6Pool(ctx, req.(*UpdateSubnetv6PoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv6Manager_DeleteSubnetv6Pool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSubnetv6PoolReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv6ManagerServer).DeleteSubnetv6Pool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv6Manager/DeleteSubnetv6Pool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv6ManagerServer).DeleteSubnetv6Pool(ctx, req.(*DeleteSubnetv6PoolReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv6Manager_CreateSubnetv6Reservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubnetv6ReservationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv6ManagerServer).CreateSubnetv6Reservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv6Manager/CreateSubnetv6Reservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv6ManagerServer).CreateSubnetv6Reservation(ctx, req.(*CreateSubnetv6ReservationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv6Manager_UpdateSubnetv6Reservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSubnetv6ReservationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv6ManagerServer).UpdateSubnetv6Reservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv6Manager/UpdateSubnetv6Reservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv6ManagerServer).UpdateSubnetv6Reservation(ctx, req.(*UpdateSubnetv6ReservationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dhcpv6Manager_DeleteSubnetv6Reservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSubnetv6ReservationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Dhcpv6ManagerServer).DeleteSubnetv6Reservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Dhcpv6Manager/DeleteSubnetv6Reservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Dhcpv6ManagerServer).DeleteSubnetv6Reservation(ctx, req.(*DeleteSubnetv6ReservationReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dhcpv6Manager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Dhcpv6Manager",
	HandlerType: (*Dhcpv6ManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartDHCPv6",
			Handler:    _Dhcpv6Manager_StartDHCPv6_Handler,
		},
		{
			MethodName: "StopDHCPv6",
			Handler:    _Dhcpv6Manager_StopDHCPv6_Handler,
		},
		{
			MethodName: "CreateSubnetv6",
			Handler:    _Dhcpv6Manager_CreateSubnetv6_Handler,
		},
		{
			MethodName: "UpdateSubnetv6",
			Handler:    _Dhcpv6Manager_UpdateSubnetv6_Handler,
		},
		{
			MethodName: "DeleteSubnetv6",
			Handler:    _Dhcpv6Manager_DeleteSubnetv6_Handler,
		},
		{
			MethodName: "CreateSubnetv6Pool",
			Handler:    _Dhcpv6Manager_CreateSubnetv6Pool_Handler,
		},
		{
			MethodName: "UpdateSubnetv6Pool",
			Handler:    _Dhcpv6Manager_UpdateSubnetv6Pool_Handler,
		},
		{
			MethodName: "DeleteSubnetv6Pool",
			Handler:    _Dhcpv6Manager_DeleteSubnetv6Pool_Handler,
		},
		{
			MethodName: "CreateSubnetv6Reservation",
			Handler:    _Dhcpv6Manager_CreateSubnetv6Reservation_Handler,
		},
		{
			MethodName: "UpdateSubnetv6Reservation",
			Handler:    _Dhcpv6Manager_UpdateSubnetv6Reservation_Handler,
		},
		{
			MethodName: "DeleteSubnetv6Reservation",
			Handler:    _Dhcpv6Manager_DeleteSubnetv6Reservation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dhcp.proto",
}
