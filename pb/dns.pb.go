// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dns.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OperResult struct {
	RetCode              int32    `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	RetMsg               string   `protobuf:"bytes,2,opt,name=ret_msg,json=retMsg,proto3" json:"ret_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperResult) Reset()         { *m = OperResult{} }
func (m *OperResult) String() string { return proto.CompactTextString(m) }
func (*OperResult) ProtoMessage()    {}
func (*OperResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{0}
}

func (m *OperResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperResult.Unmarshal(m, b)
}
func (m *OperResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperResult.Marshal(b, m, deterministic)
}
func (m *OperResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperResult.Merge(m, src)
}
func (m *OperResult) XXX_Size() int {
	return xxx_messageInfo_OperResult.Size(m)
}
func (m *OperResult) XXX_DiscardUnknown() {
	xxx_messageInfo_OperResult.DiscardUnknown(m)
}

var xxx_messageInfo_OperResult proto.InternalMessageInfo

func (m *OperResult) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *OperResult) GetRetMsg() string {
	if m != nil {
		return m.RetMsg
	}
	return ""
}

type DNSStartReq struct {
	Config               string   `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DNSStartReq) Reset()         { *m = DNSStartReq{} }
func (m *DNSStartReq) String() string { return proto.CompactTextString(m) }
func (*DNSStartReq) ProtoMessage()    {}
func (*DNSStartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{1}
}

func (m *DNSStartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNSStartReq.Unmarshal(m, b)
}
func (m *DNSStartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNSStartReq.Marshal(b, m, deterministic)
}
func (m *DNSStartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSStartReq.Merge(m, src)
}
func (m *DNSStartReq) XXX_Size() int {
	return xxx_messageInfo_DNSStartReq.Size(m)
}
func (m *DNSStartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSStartReq.DiscardUnknown(m)
}

var xxx_messageInfo_DNSStartReq proto.InternalMessageInfo

func (m *DNSStartReq) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

type DNSStopReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DNSStopReq) Reset()         { *m = DNSStopReq{} }
func (m *DNSStopReq) String() string { return proto.CompactTextString(m) }
func (*DNSStopReq) ProtoMessage()    {}
func (*DNSStopReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{2}
}

func (m *DNSStopReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNSStopReq.Unmarshal(m, b)
}
func (m *DNSStopReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNSStopReq.Marshal(b, m, deterministic)
}
func (m *DNSStopReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSStopReq.Merge(m, src)
}
func (m *DNSStopReq) XXX_Size() int {
	return xxx_messageInfo_DNSStopReq.Size(m)
}
func (m *DNSStopReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSStopReq.DiscardUnknown(m)
}

var xxx_messageInfo_DNSStopReq proto.InternalMessageInfo

type CreateACLReq struct {
	ACLName              string   `protobuf:"bytes,1,opt,name=aCLName,proto3" json:"aCLName,omitempty"`
	ACLID                string   `protobuf:"bytes,2,opt,name=aCLID,proto3" json:"aCLID,omitempty"`
	IPs                  []string `protobuf:"bytes,3,rep,name=iPs,proto3" json:"iPs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateACLReq) Reset()         { *m = CreateACLReq{} }
func (m *CreateACLReq) String() string { return proto.CompactTextString(m) }
func (*CreateACLReq) ProtoMessage()    {}
func (*CreateACLReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{3}
}

func (m *CreateACLReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateACLReq.Unmarshal(m, b)
}
func (m *CreateACLReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateACLReq.Marshal(b, m, deterministic)
}
func (m *CreateACLReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateACLReq.Merge(m, src)
}
func (m *CreateACLReq) XXX_Size() int {
	return xxx_messageInfo_CreateACLReq.Size(m)
}
func (m *CreateACLReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateACLReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateACLReq proto.InternalMessageInfo

func (m *CreateACLReq) GetACLName() string {
	if m != nil {
		return m.ACLName
	}
	return ""
}

func (m *CreateACLReq) GetACLID() string {
	if m != nil {
		return m.ACLID
	}
	return ""
}

func (m *CreateACLReq) GetIPs() []string {
	if m != nil {
		return m.IPs
	}
	return nil
}

type DeleteACLReq struct {
	ACLID                string   `protobuf:"bytes,1,opt,name=aCLID,proto3" json:"aCLID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteACLReq) Reset()         { *m = DeleteACLReq{} }
func (m *DeleteACLReq) String() string { return proto.CompactTextString(m) }
func (*DeleteACLReq) ProtoMessage()    {}
func (*DeleteACLReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{4}
}

func (m *DeleteACLReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteACLReq.Unmarshal(m, b)
}
func (m *DeleteACLReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteACLReq.Marshal(b, m, deterministic)
}
func (m *DeleteACLReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteACLReq.Merge(m, src)
}
func (m *DeleteACLReq) XXX_Size() int {
	return xxx_messageInfo_DeleteACLReq.Size(m)
}
func (m *DeleteACLReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteACLReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteACLReq proto.InternalMessageInfo

func (m *DeleteACLReq) GetACLID() string {
	if m != nil {
		return m.ACLID
	}
	return ""
}

type CreateViewReq struct {
	ViewName             string   `protobuf:"bytes,1,opt,name=viewName,proto3" json:"viewName,omitempty"`
	ViewID               string   `protobuf:"bytes,2,opt,name=viewID,proto3" json:"viewID,omitempty"`
	Priority             int32    `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	ACLIDs               []string `protobuf:"bytes,4,rep,name=aCLIDs,proto3" json:"aCLIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateViewReq) Reset()         { *m = CreateViewReq{} }
func (m *CreateViewReq) String() string { return proto.CompactTextString(m) }
func (*CreateViewReq) ProtoMessage()    {}
func (*CreateViewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{5}
}

func (m *CreateViewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateViewReq.Unmarshal(m, b)
}
func (m *CreateViewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateViewReq.Marshal(b, m, deterministic)
}
func (m *CreateViewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateViewReq.Merge(m, src)
}
func (m *CreateViewReq) XXX_Size() int {
	return xxx_messageInfo_CreateViewReq.Size(m)
}
func (m *CreateViewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateViewReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateViewReq proto.InternalMessageInfo

func (m *CreateViewReq) GetViewName() string {
	if m != nil {
		return m.ViewName
	}
	return ""
}

func (m *CreateViewReq) GetViewID() string {
	if m != nil {
		return m.ViewID
	}
	return ""
}

func (m *CreateViewReq) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *CreateViewReq) GetACLIDs() []string {
	if m != nil {
		return m.ACLIDs
	}
	return nil
}

type UpdateViewReq struct {
	ViewID               string   `protobuf:"bytes,1,opt,name=viewID,proto3" json:"viewID,omitempty"`
	Priority             int32    `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	ACLID                string   `protobuf:"bytes,3,opt,name=aCLID,proto3" json:"aCLID,omitempty"`
	DeleteIPs            []string `protobuf:"bytes,4,rep,name=deleteIPs,proto3" json:"deleteIPs,omitempty"`
	NewIPs               []string `protobuf:"bytes,5,rep,name=newIPs,proto3" json:"newIPs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateViewReq) Reset()         { *m = UpdateViewReq{} }
func (m *UpdateViewReq) String() string { return proto.CompactTextString(m) }
func (*UpdateViewReq) ProtoMessage()    {}
func (*UpdateViewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{6}
}

func (m *UpdateViewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateViewReq.Unmarshal(m, b)
}
func (m *UpdateViewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateViewReq.Marshal(b, m, deterministic)
}
func (m *UpdateViewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateViewReq.Merge(m, src)
}
func (m *UpdateViewReq) XXX_Size() int {
	return xxx_messageInfo_UpdateViewReq.Size(m)
}
func (m *UpdateViewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateViewReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateViewReq proto.InternalMessageInfo

func (m *UpdateViewReq) GetViewID() string {
	if m != nil {
		return m.ViewID
	}
	return ""
}

func (m *UpdateViewReq) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *UpdateViewReq) GetACLID() string {
	if m != nil {
		return m.ACLID
	}
	return ""
}

func (m *UpdateViewReq) GetDeleteIPs() []string {
	if m != nil {
		return m.DeleteIPs
	}
	return nil
}

func (m *UpdateViewReq) GetNewIPs() []string {
	if m != nil {
		return m.NewIPs
	}
	return nil
}

type DeleteViewReq struct {
	ViewID               string   `protobuf:"bytes,1,opt,name=viewID,proto3" json:"viewID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteViewReq) Reset()         { *m = DeleteViewReq{} }
func (m *DeleteViewReq) String() string { return proto.CompactTextString(m) }
func (*DeleteViewReq) ProtoMessage()    {}
func (*DeleteViewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{7}
}

func (m *DeleteViewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteViewReq.Unmarshal(m, b)
}
func (m *DeleteViewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteViewReq.Marshal(b, m, deterministic)
}
func (m *DeleteViewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteViewReq.Merge(m, src)
}
func (m *DeleteViewReq) XXX_Size() int {
	return xxx_messageInfo_DeleteViewReq.Size(m)
}
func (m *DeleteViewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteViewReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteViewReq proto.InternalMessageInfo

func (m *DeleteViewReq) GetViewID() string {
	if m != nil {
		return m.ViewID
	}
	return ""
}

type CreateZoneReq struct {
	ViewID               string   `protobuf:"bytes,1,opt,name=viewID,proto3" json:"viewID,omitempty"`
	ZoneID               string   `protobuf:"bytes,2,opt,name=zoneID,proto3" json:"zoneID,omitempty"`
	ZoneName             string   `protobuf:"bytes,3,opt,name=zoneName,proto3" json:"zoneName,omitempty"`
	ZoneFileName         string   `protobuf:"bytes,4,opt,name=zoneFileName,proto3" json:"zoneFileName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateZoneReq) Reset()         { *m = CreateZoneReq{} }
func (m *CreateZoneReq) String() string { return proto.CompactTextString(m) }
func (*CreateZoneReq) ProtoMessage()    {}
func (*CreateZoneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{8}
}

func (m *CreateZoneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateZoneReq.Unmarshal(m, b)
}
func (m *CreateZoneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateZoneReq.Marshal(b, m, deterministic)
}
func (m *CreateZoneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateZoneReq.Merge(m, src)
}
func (m *CreateZoneReq) XXX_Size() int {
	return xxx_messageInfo_CreateZoneReq.Size(m)
}
func (m *CreateZoneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateZoneReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateZoneReq proto.InternalMessageInfo

func (m *CreateZoneReq) GetViewID() string {
	if m != nil {
		return m.ViewID
	}
	return ""
}

func (m *CreateZoneReq) GetZoneID() string {
	if m != nil {
		return m.ZoneID
	}
	return ""
}

func (m *CreateZoneReq) GetZoneName() string {
	if m != nil {
		return m.ZoneName
	}
	return ""
}

func (m *CreateZoneReq) GetZoneFileName() string {
	if m != nil {
		return m.ZoneFileName
	}
	return ""
}

type DeleteZoneReq struct {
	ViewID               string   `protobuf:"bytes,1,opt,name=viewID,proto3" json:"viewID,omitempty"`
	ZoneID               string   `protobuf:"bytes,2,opt,name=zoneID,proto3" json:"zoneID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteZoneReq) Reset()         { *m = DeleteZoneReq{} }
func (m *DeleteZoneReq) String() string { return proto.CompactTextString(m) }
func (*DeleteZoneReq) ProtoMessage()    {}
func (*DeleteZoneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{9}
}

func (m *DeleteZoneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteZoneReq.Unmarshal(m, b)
}
func (m *DeleteZoneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteZoneReq.Marshal(b, m, deterministic)
}
func (m *DeleteZoneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteZoneReq.Merge(m, src)
}
func (m *DeleteZoneReq) XXX_Size() int {
	return xxx_messageInfo_DeleteZoneReq.Size(m)
}
func (m *DeleteZoneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteZoneReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteZoneReq proto.InternalMessageInfo

func (m *DeleteZoneReq) GetViewID() string {
	if m != nil {
		return m.ViewID
	}
	return ""
}

func (m *DeleteZoneReq) GetZoneID() string {
	if m != nil {
		return m.ZoneID
	}
	return ""
}

type CreateRRReq struct {
	ViewID               string   `protobuf:"bytes,1,opt,name=viewID,proto3" json:"viewID,omitempty"`
	ZoneID               string   `protobuf:"bytes,2,opt,name=zoneID,proto3" json:"zoneID,omitempty"`
	RRID                 string   `protobuf:"bytes,3,opt,name=rRID,proto3" json:"rRID,omitempty"`
	RRData               string   `protobuf:"bytes,4,opt,name=rRData,proto3" json:"rRData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRRReq) Reset()         { *m = CreateRRReq{} }
func (m *CreateRRReq) String() string { return proto.CompactTextString(m) }
func (*CreateRRReq) ProtoMessage()    {}
func (*CreateRRReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{10}
}

func (m *CreateRRReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRRReq.Unmarshal(m, b)
}
func (m *CreateRRReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRRReq.Marshal(b, m, deterministic)
}
func (m *CreateRRReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRRReq.Merge(m, src)
}
func (m *CreateRRReq) XXX_Size() int {
	return xxx_messageInfo_CreateRRReq.Size(m)
}
func (m *CreateRRReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRRReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRRReq proto.InternalMessageInfo

func (m *CreateRRReq) GetViewID() string {
	if m != nil {
		return m.ViewID
	}
	return ""
}

func (m *CreateRRReq) GetZoneID() string {
	if m != nil {
		return m.ZoneID
	}
	return ""
}

func (m *CreateRRReq) GetRRID() string {
	if m != nil {
		return m.RRID
	}
	return ""
}

func (m *CreateRRReq) GetRRData() string {
	if m != nil {
		return m.RRData
	}
	return ""
}

type UpdateRRReq struct {
	ViewID               string   `protobuf:"bytes,1,opt,name=viewID,proto3" json:"viewID,omitempty"`
	ZoneID               string   `protobuf:"bytes,2,opt,name=zoneID,proto3" json:"zoneID,omitempty"`
	RRID                 string   `protobuf:"bytes,3,opt,name=rRID,proto3" json:"rRID,omitempty"`
	NewRRData            string   `protobuf:"bytes,4,opt,name=newRRData,proto3" json:"newRRData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRRReq) Reset()         { *m = UpdateRRReq{} }
func (m *UpdateRRReq) String() string { return proto.CompactTextString(m) }
func (*UpdateRRReq) ProtoMessage()    {}
func (*UpdateRRReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{11}
}

func (m *UpdateRRReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRRReq.Unmarshal(m, b)
}
func (m *UpdateRRReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRRReq.Marshal(b, m, deterministic)
}
func (m *UpdateRRReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRRReq.Merge(m, src)
}
func (m *UpdateRRReq) XXX_Size() int {
	return xxx_messageInfo_UpdateRRReq.Size(m)
}
func (m *UpdateRRReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRRReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRRReq proto.InternalMessageInfo

func (m *UpdateRRReq) GetViewID() string {
	if m != nil {
		return m.ViewID
	}
	return ""
}

func (m *UpdateRRReq) GetZoneID() string {
	if m != nil {
		return m.ZoneID
	}
	return ""
}

func (m *UpdateRRReq) GetRRID() string {
	if m != nil {
		return m.RRID
	}
	return ""
}

func (m *UpdateRRReq) GetNewRRData() string {
	if m != nil {
		return m.NewRRData
	}
	return ""
}

type DeleteRRReq struct {
	ViewID               string   `protobuf:"bytes,1,opt,name=viewID,proto3" json:"viewID,omitempty"`
	ZoneID               string   `protobuf:"bytes,2,opt,name=zoneID,proto3" json:"zoneID,omitempty"`
	RRID                 string   `protobuf:"bytes,3,opt,name=rRID,proto3" json:"rRID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRRReq) Reset()         { *m = DeleteRRReq{} }
func (m *DeleteRRReq) String() string { return proto.CompactTextString(m) }
func (*DeleteRRReq) ProtoMessage()    {}
func (*DeleteRRReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{12}
}

func (m *DeleteRRReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRRReq.Unmarshal(m, b)
}
func (m *DeleteRRReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRRReq.Marshal(b, m, deterministic)
}
func (m *DeleteRRReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRRReq.Merge(m, src)
}
func (m *DeleteRRReq) XXX_Size() int {
	return xxx_messageInfo_DeleteRRReq.Size(m)
}
func (m *DeleteRRReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRRReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRRReq proto.InternalMessageInfo

func (m *DeleteRRReq) GetViewID() string {
	if m != nil {
		return m.ViewID
	}
	return ""
}

func (m *DeleteRRReq) GetZoneID() string {
	if m != nil {
		return m.ZoneID
	}
	return ""
}

func (m *DeleteRRReq) GetRRID() string {
	if m != nil {
		return m.RRID
	}
	return ""
}

func init() {
	proto.RegisterType((*OperResult)(nil), "pb.OperResult")
	proto.RegisterType((*DNSStartReq)(nil), "pb.DNSStartReq")
	proto.RegisterType((*DNSStopReq)(nil), "pb.DNSStopReq")
	proto.RegisterType((*CreateACLReq)(nil), "pb.CreateACLReq")
	proto.RegisterType((*DeleteACLReq)(nil), "pb.DeleteACLReq")
	proto.RegisterType((*CreateViewReq)(nil), "pb.CreateViewReq")
	proto.RegisterType((*UpdateViewReq)(nil), "pb.UpdateViewReq")
	proto.RegisterType((*DeleteViewReq)(nil), "pb.DeleteViewReq")
	proto.RegisterType((*CreateZoneReq)(nil), "pb.CreateZoneReq")
	proto.RegisterType((*DeleteZoneReq)(nil), "pb.DeleteZoneReq")
	proto.RegisterType((*CreateRRReq)(nil), "pb.CreateRRReq")
	proto.RegisterType((*UpdateRRReq)(nil), "pb.UpdateRRReq")
	proto.RegisterType((*DeleteRRReq)(nil), "pb.DeleteRRReq")
}

func init() { proto.RegisterFile("dns.proto", fileDescriptor_638ff8d8aaf3d8ae) }

var fileDescriptor_638ff8d8aaf3d8ae = []byte{
	// 575 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdd, 0x6e, 0x13, 0x3d,
	0x10, 0xfd, 0x36, 0xff, 0x3b, 0x49, 0xfa, 0x15, 0x0b, 0x95, 0xa5, 0xea, 0x45, 0x64, 0x81, 0x88,
	0x84, 0x1a, 0x04, 0x3c, 0x00, 0x54, 0x89, 0x90, 0x2a, 0xa5, 0x21, 0x38, 0x82, 0x0b, 0x6e, 0xaa,
	0x4d, 0x33, 0x44, 0x2b, 0xa5, 0xbb, 0x5b, 0xaf, 0x21, 0x82, 0x1b, 0x1e, 0x81, 0xd7, 0xe3, 0x71,
	0x90, 0x7f, 0xd6, 0x76, 0x60, 0x09, 0x52, 0xd5, 0xbb, 0x19, 0x7b, 0x8e, 0xcf, 0xf1, 0xec, 0x1c,
	0x2f, 0x84, 0xab, 0xb4, 0x18, 0xe5, 0x3c, 0x13, 0x19, 0xa9, 0xe5, 0x4b, 0xfa, 0x1a, 0xe0, 0x6d,
	0x8e, 0x9c, 0x61, 0xf1, 0x79, 0x23, 0xc8, 0x43, 0xe8, 0x70, 0x14, 0x97, 0x57, 0xd9, 0x0a, 0xa3,
	0x60, 0x10, 0x0c, 0x9b, 0xac, 0xcd, 0x51, 0x8c, 0xb3, 0x15, 0x92, 0x07, 0x20, 0xc3, 0xcb, 0xeb,
	0x62, 0x1d, 0xd5, 0x06, 0xc1, 0x30, 0x64, 0x2d, 0x8e, 0xe2, 0xa2, 0x58, 0xd3, 0xc7, 0xd0, 0x9d,
	0xcc, 0x16, 0x0b, 0x11, 0x73, 0xc1, 0xf0, 0x86, 0x1c, 0x41, 0xeb, 0x2a, 0x4b, 0x3f, 0x25, 0x6b,
	0x75, 0x40, 0xc8, 0x4c, 0x46, 0x7b, 0x00, 0xaa, 0x2c, 0xcb, 0x19, 0xde, 0xd0, 0x39, 0xf4, 0xc6,
	0x1c, 0x63, 0x81, 0x67, 0xe3, 0xa9, 0x44, 0x45, 0xd0, 0x8e, 0xc7, 0xd3, 0x59, 0x7c, 0x8d, 0x06,
	0x56, 0xa6, 0xe4, 0x3e, 0x34, 0xe3, 0xf1, 0xf4, 0x7c, 0x62, 0x58, 0x75, 0x42, 0x0e, 0xa1, 0x9e,
	0xcc, 0x8b, 0xa8, 0x3e, 0xa8, 0x0f, 0x43, 0x26, 0x43, 0xfa, 0x08, 0x7a, 0x13, 0xdc, 0xa0, 0x3d,
	0xd1, 0xe2, 0x02, 0x0f, 0x47, 0xb7, 0xd0, 0xd7, 0xbc, 0x1f, 0x12, 0xdc, 0xca, 0xb2, 0x63, 0xe8,
	0x7c, 0x49, 0x70, 0xeb, 0x31, 0xdb, 0x5c, 0x5e, 0x45, 0xc6, 0x96, 0xdb, 0x64, 0x12, 0x93, 0xf3,
	0x24, 0xe3, 0x89, 0xf8, 0x1a, 0xd5, 0x55, 0x97, 0x6c, 0x2e, 0x31, 0x8a, 0xa9, 0x88, 0x1a, 0x4a,
	0x9b, 0xc9, 0xe8, 0x8f, 0x00, 0xfa, 0xef, 0xf3, 0x95, 0xc7, 0xec, 0x4e, 0x0f, 0xfe, 0x7a, 0x7a,
	0xed, 0xb7, 0xd3, 0xed, 0xa5, 0xea, 0x7e, 0x33, 0x4e, 0x20, 0x5c, 0xa9, 0xab, 0x9f, 0xcf, 0x4b,
	0x5a, 0xb7, 0x20, 0x79, 0x52, 0xdc, 0xca, 0xad, 0xa6, 0x56, 0xa4, 0x33, 0xfa, 0x04, 0xfa, 0xba,
	0x61, 0xff, 0x10, 0x44, 0xbf, 0x97, 0x3d, 0xfb, 0x98, 0xa5, 0xb8, 0x4f, 0xf9, 0x11, 0xb4, 0xbe,
	0x65, 0x29, 0xba, 0x7e, 0xe9, 0x4c, 0xde, 0x48, 0x46, 0xaa, 0xc7, 0x5a, 0xb8, 0xcd, 0x09, 0x85,
	0x9e, 0x8c, 0xdf, 0x24, 0x1b, 0xbd, 0xdf, 0x50, 0xfb, 0x3b, 0x6b, 0xf4, 0x55, 0xa9, 0xf4, 0x96,
	0x02, 0x68, 0x02, 0x5d, 0x7d, 0x03, 0xc6, 0x6e, 0xa3, 0x9f, 0x40, 0x83, 0x33, 0xdb, 0x74, 0x15,
	0xcb, 0x5a, 0xce, 0x26, 0xb1, 0x88, 0x8d, 0x62, 0x93, 0xd1, 0x0c, 0xba, 0xfa, 0x33, 0xdf, 0x1d,
	0xd5, 0x09, 0x84, 0x29, 0x6e, 0x99, 0xcf, 0xe6, 0x16, 0xe8, 0x3b, 0xe8, 0xea, 0xe6, 0xdc, 0x19,
	0xe1, 0x8b, 0x9f, 0x0d, 0xe8, 0x9d, 0xad, 0x31, 0x15, 0x17, 0x71, 0x1a, 0xaf, 0x91, 0x93, 0x53,
	0xe8, 0x28, 0x7f, 0x4f, 0x66, 0x0b, 0xf2, 0xff, 0x28, 0x5f, 0x8e, 0x3c, 0xc3, 0x1f, 0x1f, 0xc8,
	0x05, 0xf7, 0x86, 0xd0, 0xff, 0xc8, 0x53, 0x68, 0x4b, 0x9f, 0xcb, 0xea, 0x03, 0x5b, 0xad, 0x7c,
	0x5f, 0x51, 0xfc, 0x0c, 0x42, 0xfb, 0x12, 0x90, 0x43, 0xb9, 0xed, 0x3f, 0x0c, 0xd5, 0x00, 0x6b,
	0x74, 0x0d, 0xf0, 0x7d, 0x5f, 0x01, 0x78, 0x0e, 0xe0, 0x3c, 0x4f, 0xee, 0x39, 0x0a, 0x33, 0xf8,
	0xd5, 0x10, 0x67, 0x56, 0x0d, 0xd9, 0x31, 0x6f, 0x35, 0xc4, 0xd9, 0x49, 0x43, 0x76, 0xec, 0xb5,
	0x4f, 0x98, 0x9c, 0x6b, 0x5f, 0x98, 0x99, 0xf3, 0x7d, 0x2c, 0x0e, 0xb2, 0x63, 0x8d, 0x0a, 0xc8,
	0x29, 0x74, 0xca, 0xe1, 0xd7, 0x1f, 0xcf, 0xb3, 0x42, 0x75, 0x79, 0x39, 0xc0, 0xba, 0xdc, 0x1b,
	0xe7, 0xea, 0xf2, 0x72, 0xfc, 0xcc, 0x68, 0xb8, 0x61, 0xfc, 0xb3, 0x7c, 0xd9, 0x52, 0x7f, 0x9e,
	0x97, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x80, 0x02, 0x1a, 0xaf, 0x86, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AgentManagerClient is the client API for AgentManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentManagerClient interface {
	StartDNS(ctx context.Context, in *DNSStartReq, opts ...grpc.CallOption) (*OperResult, error)
	StopDNS(ctx context.Context, in *DNSStopReq, opts ...grpc.CallOption) (*OperResult, error)
	CreateACL(ctx context.Context, in *CreateACLReq, opts ...grpc.CallOption) (*OperResult, error)
	DeleteACL(ctx context.Context, in *DeleteACLReq, opts ...grpc.CallOption) (*OperResult, error)
	CreateView(ctx context.Context, in *CreateViewReq, opts ...grpc.CallOption) (*OperResult, error)
	UpdateView(ctx context.Context, in *UpdateViewReq, opts ...grpc.CallOption) (*OperResult, error)
	DeleteView(ctx context.Context, in *DeleteViewReq, opts ...grpc.CallOption) (*OperResult, error)
	CreateZone(ctx context.Context, in *CreateZoneReq, opts ...grpc.CallOption) (*OperResult, error)
	DeleteZone(ctx context.Context, in *DeleteZoneReq, opts ...grpc.CallOption) (*OperResult, error)
	CreateRR(ctx context.Context, in *CreateRRReq, opts ...grpc.CallOption) (*OperResult, error)
	UpdateRR(ctx context.Context, in *UpdateRRReq, opts ...grpc.CallOption) (*OperResult, error)
	DeleteRR(ctx context.Context, in *DeleteRRReq, opts ...grpc.CallOption) (*OperResult, error)
}

type agentManagerClient struct {
	cc *grpc.ClientConn
}

func NewAgentManagerClient(cc *grpc.ClientConn) AgentManagerClient {
	return &agentManagerClient{cc}
}

func (c *agentManagerClient) StartDNS(ctx context.Context, in *DNSStartReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.AgentManager/StartDNS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) StopDNS(ctx context.Context, in *DNSStopReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.AgentManager/StopDNS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateACL(ctx context.Context, in *CreateACLReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.AgentManager/CreateACL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteACL(ctx context.Context, in *DeleteACLReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.AgentManager/DeleteACL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateView(ctx context.Context, in *CreateViewReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.AgentManager/CreateView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateView(ctx context.Context, in *UpdateViewReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.AgentManager/UpdateView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteView(ctx context.Context, in *DeleteViewReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.AgentManager/DeleteView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateZone(ctx context.Context, in *CreateZoneReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.AgentManager/CreateZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteZone(ctx context.Context, in *DeleteZoneReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.AgentManager/DeleteZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) CreateRR(ctx context.Context, in *CreateRRReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.AgentManager/CreateRR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) UpdateRR(ctx context.Context, in *UpdateRRReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.AgentManager/UpdateRR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentManagerClient) DeleteRR(ctx context.Context, in *DeleteRRReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/pb.AgentManager/DeleteRR", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AgentManagerServer is the server API for AgentManager service.
type AgentManagerServer interface {
	StartDNS(context.Context, *DNSStartReq) (*OperResult, error)
	StopDNS(context.Context, *DNSStopReq) (*OperResult, error)
	CreateACL(context.Context, *CreateACLReq) (*OperResult, error)
	DeleteACL(context.Context, *DeleteACLReq) (*OperResult, error)
	CreateView(context.Context, *CreateViewReq) (*OperResult, error)
	UpdateView(context.Context, *UpdateViewReq) (*OperResult, error)
	DeleteView(context.Context, *DeleteViewReq) (*OperResult, error)
	CreateZone(context.Context, *CreateZoneReq) (*OperResult, error)
	DeleteZone(context.Context, *DeleteZoneReq) (*OperResult, error)
	CreateRR(context.Context, *CreateRRReq) (*OperResult, error)
	UpdateRR(context.Context, *UpdateRRReq) (*OperResult, error)
	DeleteRR(context.Context, *DeleteRRReq) (*OperResult, error)
}

// UnimplementedAgentManagerServer can be embedded to have forward compatible implementations.
type UnimplementedAgentManagerServer struct {
}

func (*UnimplementedAgentManagerServer) StartDNS(ctx context.Context, req *DNSStartReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartDNS not implemented")
}
func (*UnimplementedAgentManagerServer) StopDNS(ctx context.Context, req *DNSStopReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopDNS not implemented")
}
func (*UnimplementedAgentManagerServer) CreateACL(ctx context.Context, req *CreateACLReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateACL not implemented")
}
func (*UnimplementedAgentManagerServer) DeleteACL(ctx context.Context, req *DeleteACLReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteACL not implemented")
}
func (*UnimplementedAgentManagerServer) CreateView(ctx context.Context, req *CreateViewReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateView not implemented")
}
func (*UnimplementedAgentManagerServer) UpdateView(ctx context.Context, req *UpdateViewReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateView not implemented")
}
func (*UnimplementedAgentManagerServer) DeleteView(ctx context.Context, req *DeleteViewReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteView not implemented")
}
func (*UnimplementedAgentManagerServer) CreateZone(ctx context.Context, req *CreateZoneReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateZone not implemented")
}
func (*UnimplementedAgentManagerServer) DeleteZone(ctx context.Context, req *DeleteZoneReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteZone not implemented")
}
func (*UnimplementedAgentManagerServer) CreateRR(ctx context.Context, req *CreateRRReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRR not implemented")
}
func (*UnimplementedAgentManagerServer) UpdateRR(ctx context.Context, req *UpdateRRReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRR not implemented")
}
func (*UnimplementedAgentManagerServer) DeleteRR(ctx context.Context, req *DeleteRRReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRR not implemented")
}

func RegisterAgentManagerServer(s *grpc.Server, srv AgentManagerServer) {
	s.RegisterService(&_AgentManager_serviceDesc, srv)
}

func _AgentManager_StartDNS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DNSStartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).StartDNS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AgentManager/StartDNS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).StartDNS(ctx, req.(*DNSStartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_StopDNS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DNSStopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).StopDNS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AgentManager/StopDNS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).StopDNS(ctx, req.(*DNSStopReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateACL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateACLReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateACL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AgentManager/CreateACL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateACL(ctx, req.(*CreateACLReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteACL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteACLReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteACL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AgentManager/DeleteACL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteACL(ctx, req.(*DeleteACLReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AgentManager/CreateView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateView(ctx, req.(*CreateViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AgentManager/UpdateView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateView(ctx, req.(*UpdateViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AgentManager/DeleteView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteView(ctx, req.(*DeleteViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AgentManager/CreateZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateZone(ctx, req.(*CreateZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteZoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AgentManager/DeleteZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteZone(ctx, req.(*DeleteZoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_CreateRR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRRReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).CreateRR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AgentManager/CreateRR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).CreateRR(ctx, req.(*CreateRRReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_UpdateRR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRRReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).UpdateRR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AgentManager/UpdateRR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).UpdateRR(ctx, req.(*UpdateRRReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentManager_DeleteRR_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRRReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentManagerServer).DeleteRR(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AgentManager/DeleteRR",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentManagerServer).DeleteRR(ctx, req.(*DeleteRRReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.AgentManager",
	HandlerType: (*AgentManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartDNS",
			Handler:    _AgentManager_StartDNS_Handler,
		},
		{
			MethodName: "StopDNS",
			Handler:    _AgentManager_StopDNS_Handler,
		},
		{
			MethodName: "CreateACL",
			Handler:    _AgentManager_CreateACL_Handler,
		},
		{
			MethodName: "DeleteACL",
			Handler:    _AgentManager_DeleteACL_Handler,
		},
		{
			MethodName: "CreateView",
			Handler:    _AgentManager_CreateView_Handler,
		},
		{
			MethodName: "UpdateView",
			Handler:    _AgentManager_UpdateView_Handler,
		},
		{
			MethodName: "DeleteView",
			Handler:    _AgentManager_DeleteView_Handler,
		},
		{
			MethodName: "CreateZone",
			Handler:    _AgentManager_CreateZone_Handler,
		},
		{
			MethodName: "DeleteZone",
			Handler:    _AgentManager_DeleteZone_Handler,
		},
		{
			MethodName: "CreateRR",
			Handler:    _AgentManager_CreateRR_Handler,
		},
		{
			MethodName: "UpdateRR",
			Handler:    _AgentManager_UpdateRR_Handler,
		},
		{
			MethodName: "DeleteRR",
			Handler:    _AgentManager_DeleteRR_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dns.proto",
}
